//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ServiceForTatung.HTYService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HTYWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class HTYWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTransferLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReferenceIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePartInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubCallCategoryMenuDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInboundTypeForSampoOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSampoInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSampoIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSampoInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInboundTypeForTatungOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveTatungInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTatungIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTatungInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSioInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectBySourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallGateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModelByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCallInMessageNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSynnexReturnInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSynnexInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSynnexInfoNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSynnexInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSynnexOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistrictListOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFileInfoNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSynnexProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSynnexByBothOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveQuestionMessageForTWFLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPidByCategoryForTWFLOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInboundTypeForTWFLOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertLogForTWFLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBulletinListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBulletinOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBulletinReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInboundTypeForSynnexOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynnexUpdateModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectByModelForSynnexOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerCallInMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryByRef1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransferCategoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOtherMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallCenterLeaderMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEngineerMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelCallInMessageDoingOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelCallInMessageDoingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTheCustomerCallInMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTheCustomerCallInMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoManyCallInMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelDoManyCallInMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallCenterLeaderAllMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEngineerAllMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallCategoryMenuDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferDdlMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCostomerTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCallInMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCallInMessageOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCallInMessageTwoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelCustomerCallInMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInboundProgressDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMonitorAgentLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCheckLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadCallPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAgentLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserAuthorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLogoutDtOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMonitorAgentLogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCallTypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDispositionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveQuestionMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveQuestionMessageNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCustomerMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback savetheparsentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIssueListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSolutionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMulInboundTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMulInboundTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTimeEffectByTransferCategoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getorderinfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCallLogIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback SerchCallLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getParchaseOrderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintenanceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMaintenanceLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMaintenanceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCallInMessageForExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidCostomerTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidCallCategoryMenuDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCostomerTypeByPjtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidCallCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOriginalIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HTYWebService() {
            this.Url = global::ServiceForTatung.Properties.Settings.Default.ServiceForTatung_HTYService_HTYWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTransferLogCompletedEventHandler GetTransferLogCompleted;
        
        /// <remarks/>
        public event GetFileInfoCompletedEventHandler GetFileInfoCompleted;
        
        /// <remarks/>
        public event InsertFileInfoCompletedEventHandler InsertFileInfoCompleted;
        
        /// <remarks/>
        public event UpdateReferenceIDCompletedEventHandler UpdateReferenceIDCompleted;
        
        /// <remarks/>
        public event UpdatePartInfoCompletedEventHandler UpdatePartInfoCompleted;
        
        /// <remarks/>
        public event GetSubCallCategoryMenuDataCompletedEventHandler GetSubCallCategoryMenuDataCompleted;
        
        /// <remarks/>
        public event GetProjectCompletedEventHandler GetProjectCompleted;
        
        /// <remarks/>
        public event GetProjectByProductCompletedEventHandler GetProjectByProductCompleted;
        
        /// <remarks/>
        public event InsertInboundTypeForSampoCompletedEventHandler InsertInboundTypeForSampoCompleted;
        
        /// <remarks/>
        public event saveSampoInfoCompletedEventHandler saveSampoInfoCompleted;
        
        /// <remarks/>
        public event UpdateSampoIDCompletedEventHandler UpdateSampoIDCompleted;
        
        /// <remarks/>
        public event GetSampoInfoCompletedEventHandler GetSampoInfoCompleted;
        
        /// <remarks/>
        public event InsertInboundTypeForTatungCompletedEventHandler InsertInboundTypeForTatungCompleted;
        
        /// <remarks/>
        public event saveTatungInfoCompletedEventHandler saveTatungInfoCompleted;
        
        /// <remarks/>
        public event UpdateTatungIDCompletedEventHandler UpdateTatungIDCompleted;
        
        /// <remarks/>
        public event GetTatungInfoCompletedEventHandler GetTatungInfoCompleted;
        
        /// <remarks/>
        public event GetSioInfoCompletedEventHandler GetSioInfoCompleted;
        
        /// <remarks/>
        public event GetProjectBySourceCompletedEventHandler GetProjectBySourceCompleted;
        
        /// <remarks/>
        public event GetProjectSourceCompletedEventHandler GetProjectSourceCompleted;
        
        /// <remarks/>
        public event GetCallGateCompletedEventHandler GetCallGateCompleted;
        
        /// <remarks/>
        public event GetProductNameCompletedEventHandler GetProductNameCompleted;
        
        /// <remarks/>
        public event GetAllSizeCompletedEventHandler GetAllSizeCompleted;
        
        /// <remarks/>
        public event GetModelByNameCompletedEventHandler GetModelByNameCompleted;
        
        /// <remarks/>
        public event GetAllCallInMessageNewCompletedEventHandler GetAllCallInMessageNewCompleted;
        
        /// <remarks/>
        public event saveSynnexReturnInfoCompletedEventHandler saveSynnexReturnInfoCompleted;
        
        /// <remarks/>
        public event saveSynnexInfoCompletedEventHandler saveSynnexInfoCompleted;
        
        /// <remarks/>
        public event saveSynnexInfoNewCompletedEventHandler saveSynnexInfoNewCompleted;
        
        /// <remarks/>
        public event updateSynnexInfoCompletedEventHandler updateSynnexInfoCompleted;
        
        /// <remarks/>
        public event getSynnexOneCompletedEventHandler getSynnexOneCompleted;
        
        /// <remarks/>
        public event GetCityListCompletedEventHandler GetCityListCompleted;
        
        /// <remarks/>
        public event GetDistrictListCompletedEventHandler GetDistrictListCompleted;
        
        /// <remarks/>
        public event InsertFileInfoNewCompletedEventHandler InsertFileInfoNewCompleted;
        
        /// <remarks/>
        public event InsertSynnexProcessCompletedEventHandler InsertSynnexProcessCompleted;
        
        /// <remarks/>
        public event GetSynnexByBothCompletedEventHandler GetSynnexByBothCompleted;
        
        /// <remarks/>
        public event SaveQuestionMessageForTWFLCompletedEventHandler SaveQuestionMessageForTWFLCompleted;
        
        /// <remarks/>
        public event GetPidByCategoryForTWFLCompletedEventHandler GetPidByCategoryForTWFLCompleted;
        
        /// <remarks/>
        public event InsertInboundTypeForTWFLCompletedEventHandler InsertInboundTypeForTWFLCompleted;
        
        /// <remarks/>
        public event insertLogForTWFLCompletedEventHandler insertLogForTWFLCompleted;
        
        /// <remarks/>
        public event GetBulletinListCompletedEventHandler GetBulletinListCompleted;
        
        /// <remarks/>
        public event GetBulletinOneCompletedEventHandler GetBulletinOneCompleted;
        
        /// <remarks/>
        public event InsertBulletinReadCompletedEventHandler InsertBulletinReadCompleted;
        
        /// <remarks/>
        public event InsertInboundTypeForSynnexCompletedEventHandler InsertInboundTypeForSynnexCompleted;
        
        /// <remarks/>
        public event SynnexUpdateModelCompletedEventHandler SynnexUpdateModelCompleted;
        
        /// <remarks/>
        public event GetProjectByModelForSynnexCompletedEventHandler GetProjectByModelForSynnexCompleted;
        
        /// <remarks/>
        public event GetCustomerCallInMessageCompletedEventHandler GetCustomerCallInMessageCompleted;
        
        /// <remarks/>
        public event GetHistoryByRef1CompletedEventHandler GetHistoryByRef1Completed;
        
        /// <remarks/>
        public event getTransferCategoryListCompletedEventHandler getTransferCategoryListCompleted;
        
        /// <remarks/>
        public event GetOtherMessageCompletedEventHandler GetOtherMessageCompleted;
        
        /// <remarks/>
        public event GetCallCenterLeaderMessageCompletedEventHandler GetCallCenterLeaderMessageCompleted;
        
        /// <remarks/>
        public event GetEngineerMessageCompletedEventHandler GetEngineerMessageCompleted;
        
        /// <remarks/>
        public event SelCallInMessageDoingOneCompletedEventHandler SelCallInMessageDoingOneCompleted;
        
        /// <remarks/>
        public event SelCallInMessageDoingCompletedEventHandler SelCallInMessageDoingCompleted;
        
        /// <remarks/>
        public event AddTheCustomerCallInMessageCompletedEventHandler AddTheCustomerCallInMessageCompleted;
        
        /// <remarks/>
        public event UpdateTheCustomerCallInMessageCompletedEventHandler UpdateTheCustomerCallInMessageCompleted;
        
        /// <remarks/>
        public event GetDoManyCallInMessageCompletedEventHandler GetDoManyCallInMessageCompleted;
        
        /// <remarks/>
        public event DelDoManyCallInMessageCompletedEventHandler DelDoManyCallInMessageCompleted;
        
        /// <remarks/>
        public event GetCallCenterLeaderAllMessageCompletedEventHandler GetCallCenterLeaderAllMessageCompleted;
        
        /// <remarks/>
        public event GetEngineerAllMessageCompletedEventHandler GetEngineerAllMessageCompleted;
        
        /// <remarks/>
        public event GetCallCategoryMenuDataCompletedEventHandler GetCallCategoryMenuDataCompleted;
        
        /// <remarks/>
        public event GetTransferDdlMessageCompletedEventHandler GetTransferDdlMessageCompleted;
        
        /// <remarks/>
        public event GetCostomerTypeCompletedEventHandler GetCostomerTypeCompleted;
        
        /// <remarks/>
        public event GetAllCallInMessageCompletedEventHandler GetAllCallInMessageCompleted;
        
        /// <remarks/>
        public event GetAllCallInMessageOneCompletedEventHandler GetAllCallInMessageOneCompleted;
        
        /// <remarks/>
        public event GetAllCallInMessageTwoCompletedEventHandler GetAllCallInMessageTwoCompleted;
        
        /// <remarks/>
        public event DelCustomerCallInMessageCompletedEventHandler DelCustomerCallInMessageCompleted;
        
        /// <remarks/>
        public event getInboundProgressDetailListCompletedEventHandler getInboundProgressDetailListCompleted;
        
        /// <remarks/>
        public event GetAccountCompletedEventHandler GetAccountCompleted;
        
        /// <remarks/>
        public event InsertMonitorAgentLogonCompletedEventHandler InsertMonitorAgentLogonCompleted;
        
        /// <remarks/>
        public event InsertCheckLogCompletedEventHandler InsertCheckLogCompleted;
        
        /// <remarks/>
        public event GetAgentCompletedEventHandler GetAgentCompleted;
        
        /// <remarks/>
        public event GetRoleCompletedEventHandler GetRoleCompleted;
        
        /// <remarks/>
        public event UpdateAccountPasswordCompletedEventHandler UpdateAccountPasswordCompleted;
        
        /// <remarks/>
        public event ReadCallPasswordCompletedEventHandler ReadCallPasswordCompleted;
        
        /// <remarks/>
        public event InsertAgentLogonCompletedEventHandler InsertAgentLogonCompleted;
        
        /// <remarks/>
        public event getUserAuthorityCompletedEventHandler getUserAuthorityCompleted;
        
        /// <remarks/>
        public event GetParentMenuCompletedEventHandler GetParentMenuCompleted;
        
        /// <remarks/>
        public event GetSubMenuCompletedEventHandler GetSubMenuCompleted;
        
        /// <remarks/>
        public event UpdateLogoutDtCompletedEventHandler UpdateLogoutDtCompleted;
        
        /// <remarks/>
        public event DelMonitorAgentLogoutCompletedEventHandler DelMonitorAgentLogoutCompleted;
        
        /// <remarks/>
        public event getCallTypeIDCompletedEventHandler getCallTypeIDCompleted;
        
        /// <remarks/>
        public event GetTVModelCompletedEventHandler GetTVModelCompleted;
        
        /// <remarks/>
        public event GetTypeListCompletedEventHandler GetTypeListCompleted;
        
        /// <remarks/>
        public event insertLogCompletedEventHandler insertLogCompleted;
        
        /// <remarks/>
        public event SetDispositionStatusCompletedEventHandler SetDispositionStatusCompleted;
        
        /// <remarks/>
        public event SaveQuestionMessageCompletedEventHandler SaveQuestionMessageCompleted;
        
        /// <remarks/>
        public event SaveQuestionMessageNewCompletedEventHandler SaveQuestionMessageNewCompleted;
        
        /// <remarks/>
        public event SaveCustomerMessageCompletedEventHandler SaveCustomerMessageCompleted;
        
        /// <remarks/>
        public event savetheparsentCompletedEventHandler savetheparsentCompleted;
        
        /// <remarks/>
        public event GetIssueListCompletedEventHandler GetIssueListCompleted;
        
        /// <remarks/>
        public event GetSolutionListCompletedEventHandler GetSolutionListCompleted;
        
        /// <remarks/>
        public event selectdataCompletedEventHandler selectdataCompleted;
        
        /// <remarks/>
        public event DeleteMulInboundTypeCompletedEventHandler DeleteMulInboundTypeCompleted;
        
        /// <remarks/>
        public event InsertMulInboundTypeCompletedEventHandler InsertMulInboundTypeCompleted;
        
        /// <remarks/>
        public event getTimeEffectByTransferCategoryListCompletedEventHandler getTimeEffectByTransferCategoryListCompleted;
        
        /// <remarks/>
        public event getorderinfoCompletedEventHandler getorderinfoCompleted;
        
        /// <remarks/>
        public event updateCallLogIndexCompletedEventHandler updateCallLogIndexCompleted;
        
        /// <remarks/>
        public event SerchCallLogCompletedEventHandler SerchCallLogCompleted;
        
        /// <remarks/>
        public event getParchaseOrderInfoCompletedEventHandler getParchaseOrderInfoCompleted;
        
        /// <remarks/>
        public event GetMaintenanceInfoCompletedEventHandler GetMaintenanceInfoCompleted;
        
        /// <remarks/>
        public event UpdateMaintenanceLevelCompletedEventHandler UpdateMaintenanceLevelCompleted;
        
        /// <remarks/>
        public event InsertMaintenanceInfoCompletedEventHandler InsertMaintenanceInfoCompleted;
        
        /// <remarks/>
        public event GetAllCallInMessageForExcelCompletedEventHandler GetAllCallInMessageForExcelCompleted;
        
        /// <remarks/>
        public event GetValidCostomerTypeCompletedEventHandler GetValidCostomerTypeCompleted;
        
        /// <remarks/>
        public event GetValidCallCategoryMenuDataCompletedEventHandler GetValidCallCategoryMenuDataCompleted;
        
        /// <remarks/>
        public event GetModelCompletedEventHandler GetModelCompleted;
        
        /// <remarks/>
        public event GetCostomerTypeByPjtCompletedEventHandler GetCostomerTypeByPjtCompleted;
        
        /// <remarks/>
        public event GetValidCallCategoryCompletedEventHandler GetValidCallCategoryCompleted;
        
        /// <remarks/>
        public event UpdateOriginalIDCompletedEventHandler UpdateOriginalIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransferLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransferLog(string InboundID, string RoleID) {
            object[] results = this.Invoke("GetTransferLog", new object[] {
                        InboundID,
                        RoleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferLogAsync(string InboundID, string RoleID) {
            this.GetTransferLogAsync(InboundID, RoleID, null);
        }
        
        /// <remarks/>
        public void GetTransferLogAsync(string InboundID, string RoleID, object userState) {
            if ((this.GetTransferLogOperationCompleted == null)) {
                this.GetTransferLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferLogOperationCompleted);
            }
            this.InvokeAsync("GetTransferLog", new object[] {
                        InboundID,
                        RoleID}, this.GetTransferLogOperationCompleted, userState);
        }
        
        private void OnGetTransferLogOperationCompleted(object arg) {
            if ((this.GetTransferLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferLogCompleted(this, new GetTransferLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFileInfo(string InboundID) {
            object[] results = this.Invoke("GetFileInfo", new object[] {
                        InboundID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(string InboundID) {
            this.GetFileInfoAsync(InboundID, null);
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(string InboundID, object userState) {
            if ((this.GetFileInfoOperationCompleted == null)) {
                this.GetFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetFileInfo", new object[] {
                        InboundID}, this.GetFileInfoOperationCompleted, userState);
        }
        
        private void OnGetFileInfoOperationCompleted(object arg) {
            if ((this.GetFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileInfoCompleted(this, new GetFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFileInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertFileInfo(string InboundID, string CreatrBy, string fileurl) {
            this.Invoke("InsertFileInfo", new object[] {
                        InboundID,
                        CreatrBy,
                        fileurl});
        }
        
        /// <remarks/>
        public void InsertFileInfoAsync(string InboundID, string CreatrBy, string fileurl) {
            this.InsertFileInfoAsync(InboundID, CreatrBy, fileurl, null);
        }
        
        /// <remarks/>
        public void InsertFileInfoAsync(string InboundID, string CreatrBy, string fileurl, object userState) {
            if ((this.InsertFileInfoOperationCompleted == null)) {
                this.InsertFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFileInfoOperationCompleted);
            }
            this.InvokeAsync("InsertFileInfo", new object[] {
                        InboundID,
                        CreatrBy,
                        fileurl}, this.InsertFileInfoOperationCompleted, userState);
        }
        
        private void OnInsertFileInfoOperationCompleted(object arg) {
            if ((this.InsertFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFileInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateReferenceID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateReferenceID(string caseID, string ProcessID) {
            this.Invoke("UpdateReferenceID", new object[] {
                        caseID,
                        ProcessID});
        }
        
        /// <remarks/>
        public void UpdateReferenceIDAsync(string caseID, string ProcessID) {
            this.UpdateReferenceIDAsync(caseID, ProcessID, null);
        }
        
        /// <remarks/>
        public void UpdateReferenceIDAsync(string caseID, string ProcessID, object userState) {
            if ((this.UpdateReferenceIDOperationCompleted == null)) {
                this.UpdateReferenceIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReferenceIDOperationCompleted);
            }
            this.InvokeAsync("UpdateReferenceID", new object[] {
                        caseID,
                        ProcessID}, this.UpdateReferenceIDOperationCompleted, userState);
        }
        
        private void OnUpdateReferenceIDOperationCompleted(object arg) {
            if ((this.UpdateReferenceIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReferenceIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePartInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePartInfo(string id) {
            this.Invoke("UpdatePartInfo", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void UpdatePartInfoAsync(string id) {
            this.UpdatePartInfoAsync(id, null);
        }
        
        /// <remarks/>
        public void UpdatePartInfoAsync(string id, object userState) {
            if ((this.UpdatePartInfoOperationCompleted == null)) {
                this.UpdatePartInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePartInfoOperationCompleted);
            }
            this.InvokeAsync("UpdatePartInfo", new object[] {
                        id}, this.UpdatePartInfoOperationCompleted, userState);
        }
        
        private void OnUpdatePartInfoOperationCompleted(object arg) {
            if ((this.UpdatePartInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePartInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubCallCategoryMenuData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubCallCategoryMenuData(string pid) {
            object[] results = this.Invoke("GetSubCallCategoryMenuData", new object[] {
                        pid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubCallCategoryMenuDataAsync(string pid) {
            this.GetSubCallCategoryMenuDataAsync(pid, null);
        }
        
        /// <remarks/>
        public void GetSubCallCategoryMenuDataAsync(string pid, object userState) {
            if ((this.GetSubCallCategoryMenuDataOperationCompleted == null)) {
                this.GetSubCallCategoryMenuDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubCallCategoryMenuDataOperationCompleted);
            }
            this.InvokeAsync("GetSubCallCategoryMenuData", new object[] {
                        pid}, this.GetSubCallCategoryMenuDataOperationCompleted, userState);
        }
        
        private void OnGetSubCallCategoryMenuDataOperationCompleted(object arg) {
            if ((this.GetSubCallCategoryMenuDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubCallCategoryMenuDataCompleted(this, new GetSubCallCategoryMenuDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProject(string IsValid) {
            object[] results = this.Invoke("GetProject", new object[] {
                        IsValid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectAsync(string IsValid) {
            this.GetProjectAsync(IsValid, null);
        }
        
        /// <remarks/>
        public void GetProjectAsync(string IsValid, object userState) {
            if ((this.GetProjectOperationCompleted == null)) {
                this.GetProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectOperationCompleted);
            }
            this.InvokeAsync("GetProject", new object[] {
                        IsValid}, this.GetProjectOperationCompleted, userState);
        }
        
        private void OnGetProjectOperationCompleted(object arg) {
            if ((this.GetProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectCompleted(this, new GetProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectByProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProjectByProduct(string ProductName, string type) {
            object[] results = this.Invoke("GetProjectByProduct", new object[] {
                        ProductName,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectByProductAsync(string ProductName, string type) {
            this.GetProjectByProductAsync(ProductName, type, null);
        }
        
        /// <remarks/>
        public void GetProjectByProductAsync(string ProductName, string type, object userState) {
            if ((this.GetProjectByProductOperationCompleted == null)) {
                this.GetProjectByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectByProductOperationCompleted);
            }
            this.InvokeAsync("GetProjectByProduct", new object[] {
                        ProductName,
                        type}, this.GetProjectByProductOperationCompleted, userState);
        }
        
        private void OnGetProjectByProductOperationCompleted(object arg) {
            if ((this.GetProjectByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectByProductCompleted(this, new GetProjectByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertInboundTypeForSampo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertInboundTypeForSampo(string InboundID, string EditPerson, string Date, string PID, string type) {
            this.Invoke("InsertInboundTypeForSampo", new object[] {
                        InboundID,
                        EditPerson,
                        Date,
                        PID,
                        type});
        }
        
        /// <remarks/>
        public void InsertInboundTypeForSampoAsync(string InboundID, string EditPerson, string Date, string PID, string type) {
            this.InsertInboundTypeForSampoAsync(InboundID, EditPerson, Date, PID, type, null);
        }
        
        /// <remarks/>
        public void InsertInboundTypeForSampoAsync(string InboundID, string EditPerson, string Date, string PID, string type, object userState) {
            if ((this.InsertInboundTypeForSampoOperationCompleted == null)) {
                this.InsertInboundTypeForSampoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInboundTypeForSampoOperationCompleted);
            }
            this.InvokeAsync("InsertInboundTypeForSampo", new object[] {
                        InboundID,
                        EditPerson,
                        Date,
                        PID,
                        type}, this.InsertInboundTypeForSampoOperationCompleted, userState);
        }
        
        private void OnInsertInboundTypeForSampoOperationCompleted(object arg) {
            if ((this.InsertInboundTypeForSampoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInboundTypeForSampoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSampoInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveSampoInfo(string inboudid, string SampoID, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string PODt, string SPFBTime, string status, string productName, string createBy, string type) {
            this.Invoke("saveSampoInfo", new object[] {
                        inboudid,
                        SampoID,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        PODt,
                        SPFBTime,
                        status,
                        productName,
                        createBy,
                        type});
        }
        
        /// <remarks/>
        public void saveSampoInfoAsync(string inboudid, string SampoID, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string PODt, string SPFBTime, string status, string productName, string createBy, string type) {
            this.saveSampoInfoAsync(inboudid, SampoID, ADD1, ADD2, ADD3, ADD4, SN, PODt, SPFBTime, status, productName, createBy, type, null);
        }
        
        /// <remarks/>
        public void saveSampoInfoAsync(string inboudid, string SampoID, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string PODt, string SPFBTime, string status, string productName, string createBy, string type, object userState) {
            if ((this.saveSampoInfoOperationCompleted == null)) {
                this.saveSampoInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSampoInfoOperationCompleted);
            }
            this.InvokeAsync("saveSampoInfo", new object[] {
                        inboudid,
                        SampoID,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        PODt,
                        SPFBTime,
                        status,
                        productName,
                        createBy,
                        type}, this.saveSampoInfoOperationCompleted, userState);
        }
        
        private void OnsaveSampoInfoOperationCompleted(object arg) {
            if ((this.saveSampoInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSampoInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSampoID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSampoID(string inboudid, string SampoID, string type) {
            object[] results = this.Invoke("UpdateSampoID", new object[] {
                        inboudid,
                        SampoID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSampoIDAsync(string inboudid, string SampoID, string type) {
            this.UpdateSampoIDAsync(inboudid, SampoID, type, null);
        }
        
        /// <remarks/>
        public void UpdateSampoIDAsync(string inboudid, string SampoID, string type, object userState) {
            if ((this.UpdateSampoIDOperationCompleted == null)) {
                this.UpdateSampoIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSampoIDOperationCompleted);
            }
            this.InvokeAsync("UpdateSampoID", new object[] {
                        inboudid,
                        SampoID,
                        type}, this.UpdateSampoIDOperationCompleted, userState);
        }
        
        private void OnUpdateSampoIDOperationCompleted(object arg) {
            if ((this.UpdateSampoIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSampoIDCompleted(this, new UpdateSampoIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSampoInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSampoInfo(string SampoID, string type) {
            object[] results = this.Invoke("GetSampoInfo", new object[] {
                        SampoID,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSampoInfoAsync(string SampoID, string type) {
            this.GetSampoInfoAsync(SampoID, type, null);
        }
        
        /// <remarks/>
        public void GetSampoInfoAsync(string SampoID, string type, object userState) {
            if ((this.GetSampoInfoOperationCompleted == null)) {
                this.GetSampoInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSampoInfoOperationCompleted);
            }
            this.InvokeAsync("GetSampoInfo", new object[] {
                        SampoID,
                        type}, this.GetSampoInfoOperationCompleted, userState);
        }
        
        private void OnGetSampoInfoOperationCompleted(object arg) {
            if ((this.GetSampoInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSampoInfoCompleted(this, new GetSampoInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertInboundTypeForTatung", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertInboundTypeForTatung(string InboundID, string EditPerson, string Date, string PID, string type) {
            this.Invoke("InsertInboundTypeForTatung", new object[] {
                        InboundID,
                        EditPerson,
                        Date,
                        PID,
                        type});
        }
        
        /// <remarks/>
        public void InsertInboundTypeForTatungAsync(string InboundID, string EditPerson, string Date, string PID, string type) {
            this.InsertInboundTypeForTatungAsync(InboundID, EditPerson, Date, PID, type, null);
        }
        
        /// <remarks/>
        public void InsertInboundTypeForTatungAsync(string InboundID, string EditPerson, string Date, string PID, string type, object userState) {
            if ((this.InsertInboundTypeForTatungOperationCompleted == null)) {
                this.InsertInboundTypeForTatungOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInboundTypeForTatungOperationCompleted);
            }
            this.InvokeAsync("InsertInboundTypeForTatung", new object[] {
                        InboundID,
                        EditPerson,
                        Date,
                        PID,
                        type}, this.InsertInboundTypeForTatungOperationCompleted, userState);
        }
        
        private void OnInsertInboundTypeForTatungOperationCompleted(object arg) {
            if ((this.InsertInboundTypeForTatungCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInboundTypeForTatungCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveTatungInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveTatungInfo(string inboudid, string TatungID, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string PODt, string SNFBTime, string RSStation, string status, string productName, string createBy, string type) {
            this.Invoke("saveTatungInfo", new object[] {
                        inboudid,
                        TatungID,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        PODt,
                        SNFBTime,
                        RSStation,
                        status,
                        productName,
                        createBy,
                        type});
        }
        
        /// <remarks/>
        public void saveTatungInfoAsync(string inboudid, string TatungID, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string PODt, string SNFBTime, string RSStation, string status, string productName, string createBy, string type) {
            this.saveTatungInfoAsync(inboudid, TatungID, ADD1, ADD2, ADD3, ADD4, SN, PODt, SNFBTime, RSStation, status, productName, createBy, type, null);
        }
        
        /// <remarks/>
        public void saveTatungInfoAsync(string inboudid, string TatungID, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string PODt, string SNFBTime, string RSStation, string status, string productName, string createBy, string type, object userState) {
            if ((this.saveTatungInfoOperationCompleted == null)) {
                this.saveTatungInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveTatungInfoOperationCompleted);
            }
            this.InvokeAsync("saveTatungInfo", new object[] {
                        inboudid,
                        TatungID,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        PODt,
                        SNFBTime,
                        RSStation,
                        status,
                        productName,
                        createBy,
                        type}, this.saveTatungInfoOperationCompleted, userState);
        }
        
        private void OnsaveTatungInfoOperationCompleted(object arg) {
            if ((this.saveTatungInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveTatungInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTatungID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateTatungID(string inboudid, string TatungID, string type) {
            object[] results = this.Invoke("UpdateTatungID", new object[] {
                        inboudid,
                        TatungID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTatungIDAsync(string inboudid, string TatungID, string type) {
            this.UpdateTatungIDAsync(inboudid, TatungID, type, null);
        }
        
        /// <remarks/>
        public void UpdateTatungIDAsync(string inboudid, string TatungID, string type, object userState) {
            if ((this.UpdateTatungIDOperationCompleted == null)) {
                this.UpdateTatungIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTatungIDOperationCompleted);
            }
            this.InvokeAsync("UpdateTatungID", new object[] {
                        inboudid,
                        TatungID,
                        type}, this.UpdateTatungIDOperationCompleted, userState);
        }
        
        private void OnUpdateTatungIDOperationCompleted(object arg) {
            if ((this.UpdateTatungIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTatungIDCompleted(this, new UpdateTatungIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTatungInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTatungInfo(string TatungID, string type) {
            object[] results = this.Invoke("GetTatungInfo", new object[] {
                        TatungID,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTatungInfoAsync(string TatungID, string type) {
            this.GetTatungInfoAsync(TatungID, type, null);
        }
        
        /// <remarks/>
        public void GetTatungInfoAsync(string TatungID, string type, object userState) {
            if ((this.GetTatungInfoOperationCompleted == null)) {
                this.GetTatungInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTatungInfoOperationCompleted);
            }
            this.InvokeAsync("GetTatungInfo", new object[] {
                        TatungID,
                        type}, this.GetTatungInfoOperationCompleted, userState);
        }
        
        private void OnGetTatungInfoOperationCompleted(object arg) {
            if ((this.GetTatungInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTatungInfoCompleted(this, new GetTatungInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSioInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSioInfo(string sioid, string type) {
            object[] results = this.Invoke("GetSioInfo", new object[] {
                        sioid,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSioInfoAsync(string sioid, string type) {
            this.GetSioInfoAsync(sioid, type, null);
        }
        
        /// <remarks/>
        public void GetSioInfoAsync(string sioid, string type, object userState) {
            if ((this.GetSioInfoOperationCompleted == null)) {
                this.GetSioInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSioInfoOperationCompleted);
            }
            this.InvokeAsync("GetSioInfo", new object[] {
                        sioid,
                        type}, this.GetSioInfoOperationCompleted, userState);
        }
        
        private void OnGetSioInfoOperationCompleted(object arg) {
            if ((this.GetSioInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSioInfoCompleted(this, new GetSioInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectBySource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProjectBySource(string IsValid, string ParentID) {
            object[] results = this.Invoke("GetProjectBySource", new object[] {
                        IsValid,
                        ParentID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectBySourceAsync(string IsValid, string ParentID) {
            this.GetProjectBySourceAsync(IsValid, ParentID, null);
        }
        
        /// <remarks/>
        public void GetProjectBySourceAsync(string IsValid, string ParentID, object userState) {
            if ((this.GetProjectBySourceOperationCompleted == null)) {
                this.GetProjectBySourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectBySourceOperationCompleted);
            }
            this.InvokeAsync("GetProjectBySource", new object[] {
                        IsValid,
                        ParentID}, this.GetProjectBySourceOperationCompleted, userState);
        }
        
        private void OnGetProjectBySourceOperationCompleted(object arg) {
            if ((this.GetProjectBySourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectBySourceCompleted(this, new GetProjectBySourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectSource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProjectSource(string IsValid) {
            object[] results = this.Invoke("GetProjectSource", new object[] {
                        IsValid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectSourceAsync(string IsValid) {
            this.GetProjectSourceAsync(IsValid, null);
        }
        
        /// <remarks/>
        public void GetProjectSourceAsync(string IsValid, object userState) {
            if ((this.GetProjectSourceOperationCompleted == null)) {
                this.GetProjectSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectSourceOperationCompleted);
            }
            this.InvokeAsync("GetProjectSource", new object[] {
                        IsValid}, this.GetProjectSourceOperationCompleted, userState);
        }
        
        private void OnGetProjectSourceOperationCompleted(object arg) {
            if ((this.GetProjectSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectSourceCompleted(this, new GetProjectSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCallGate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallGate() {
            object[] results = this.Invoke("GetCallGate", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallGateAsync() {
            this.GetCallGateAsync(null);
        }
        
        /// <remarks/>
        public void GetCallGateAsync(object userState) {
            if ((this.GetCallGateOperationCompleted == null)) {
                this.GetCallGateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallGateOperationCompleted);
            }
            this.InvokeAsync("GetCallGate", new object[0], this.GetCallGateOperationCompleted, userState);
        }
        
        private void OnGetCallGateOperationCompleted(object arg) {
            if ((this.GetCallGateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallGateCompleted(this, new GetCallGateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductName(string pjtid) {
            object[] results = this.Invoke("GetProductName", new object[] {
                        pjtid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductNameAsync(string pjtid) {
            this.GetProductNameAsync(pjtid, null);
        }
        
        /// <remarks/>
        public void GetProductNameAsync(string pjtid, object userState) {
            if ((this.GetProductNameOperationCompleted == null)) {
                this.GetProductNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductNameOperationCompleted);
            }
            this.InvokeAsync("GetProductName", new object[] {
                        pjtid}, this.GetProductNameOperationCompleted, userState);
        }
        
        private void OnGetProductNameOperationCompleted(object arg) {
            if ((this.GetProductNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductNameCompleted(this, new GetProductNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllSize(string pjt) {
            object[] results = this.Invoke("GetAllSize", new object[] {
                        pjt});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSizeAsync(string pjt) {
            this.GetAllSizeAsync(pjt, null);
        }
        
        /// <remarks/>
        public void GetAllSizeAsync(string pjt, object userState) {
            if ((this.GetAllSizeOperationCompleted == null)) {
                this.GetAllSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSizeOperationCompleted);
            }
            this.InvokeAsync("GetAllSize", new object[] {
                        pjt}, this.GetAllSizeOperationCompleted, userState);
        }
        
        private void OnGetAllSizeOperationCompleted(object arg) {
            if ((this.GetAllSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSizeCompleted(this, new GetAllSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModelByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModelByName(string pjtid, string productName) {
            object[] results = this.Invoke("GetModelByName", new object[] {
                        pjtid,
                        productName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetModelByNameAsync(string pjtid, string productName) {
            this.GetModelByNameAsync(pjtid, productName, null);
        }
        
        /// <remarks/>
        public void GetModelByNameAsync(string pjtid, string productName, object userState) {
            if ((this.GetModelByNameOperationCompleted == null)) {
                this.GetModelByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModelByNameOperationCompleted);
            }
            this.InvokeAsync("GetModelByName", new object[] {
                        pjtid,
                        productName}, this.GetModelByNameOperationCompleted, userState);
        }
        
        private void OnGetModelByNameOperationCompleted(object arg) {
            if ((this.GetModelByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModelByNameCompleted(this, new GetModelByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCallInMessageNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCallInMessageNew(
                    string SelWay, 
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency, 
                    string IsOri, 
                    string Size, 
                    string ProjectSource, 
                    string MNO) {
            object[] results = this.Invoke("GetAllCallInMessageNew", new object[] {
                        SelWay,
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate,
                        ProjectType,
                        TVSize,
                        MaintainLevel,
                        Emergency,
                        IsOri,
                        Size,
                        ProjectSource,
                        MNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCallInMessageNewAsync(
                    string SelWay, 
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency, 
                    string IsOri, 
                    string Size, 
                    string ProjectSource, 
                    string MNO) {
            this.GetAllCallInMessageNewAsync(SelWay, Order_num, condition1, condition2, condition3, condition4, Time1, Time2, condition5, condition6, condition7, Shenfen, TransferCategoryID, ProcessRate, ProjectType, TVSize, MaintainLevel, Emergency, IsOri, Size, ProjectSource, MNO, null);
        }
        
        /// <remarks/>
        public void GetAllCallInMessageNewAsync(
                    string SelWay, 
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency, 
                    string IsOri, 
                    string Size, 
                    string ProjectSource, 
                    string MNO, 
                    object userState) {
            if ((this.GetAllCallInMessageNewOperationCompleted == null)) {
                this.GetAllCallInMessageNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCallInMessageNewOperationCompleted);
            }
            this.InvokeAsync("GetAllCallInMessageNew", new object[] {
                        SelWay,
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate,
                        ProjectType,
                        TVSize,
                        MaintainLevel,
                        Emergency,
                        IsOri,
                        Size,
                        ProjectSource,
                        MNO}, this.GetAllCallInMessageNewOperationCompleted, userState);
        }
        
        private void OnGetAllCallInMessageNewOperationCompleted(object arg) {
            if ((this.GetAllCallInMessageNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCallInMessageNewCompleted(this, new GetAllCallInMessageNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSynnexReturnInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveSynnexReturnInfo(string msgid, string SynnexID, string SynnexStatus, string SNFBTime, string Record, string type) {
            this.Invoke("saveSynnexReturnInfo", new object[] {
                        msgid,
                        SynnexID,
                        SynnexStatus,
                        SNFBTime,
                        Record,
                        type});
        }
        
        /// <remarks/>
        public void saveSynnexReturnInfoAsync(string msgid, string SynnexID, string SynnexStatus, string SNFBTime, string Record, string type) {
            this.saveSynnexReturnInfoAsync(msgid, SynnexID, SynnexStatus, SNFBTime, Record, type, null);
        }
        
        /// <remarks/>
        public void saveSynnexReturnInfoAsync(string msgid, string SynnexID, string SynnexStatus, string SNFBTime, string Record, string type, object userState) {
            if ((this.saveSynnexReturnInfoOperationCompleted == null)) {
                this.saveSynnexReturnInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSynnexReturnInfoOperationCompleted);
            }
            this.InvokeAsync("saveSynnexReturnInfo", new object[] {
                        msgid,
                        SynnexID,
                        SynnexStatus,
                        SNFBTime,
                        Record,
                        type}, this.saveSynnexReturnInfoOperationCompleted, userState);
        }
        
        private void OnsaveSynnexReturnInfoOperationCompleted(object arg) {
            if ((this.saveSynnexReturnInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSynnexReturnInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSynnexInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveSynnexInfo(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string createBy) {
            this.Invoke("saveSynnexInfo", new object[] {
                        inboudid,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        status,
                        msgid,
                        createBy});
        }
        
        /// <remarks/>
        public void saveSynnexInfoAsync(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string createBy) {
            this.saveSynnexInfoAsync(inboudid, ADD1, ADD2, ADD3, ADD4, SN, status, msgid, createBy, null);
        }
        
        /// <remarks/>
        public void saveSynnexInfoAsync(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string createBy, object userState) {
            if ((this.saveSynnexInfoOperationCompleted == null)) {
                this.saveSynnexInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSynnexInfoOperationCompleted);
            }
            this.InvokeAsync("saveSynnexInfo", new object[] {
                        inboudid,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        status,
                        msgid,
                        createBy}, this.saveSynnexInfoOperationCompleted, userState);
        }
        
        private void OnsaveSynnexInfoOperationCompleted(object arg) {
            if ((this.saveSynnexInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSynnexInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveSynnexInfoNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveSynnexInfoNew(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string createBy, string type) {
            this.Invoke("saveSynnexInfoNew", new object[] {
                        inboudid,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        status,
                        msgid,
                        createBy,
                        type});
        }
        
        /// <remarks/>
        public void saveSynnexInfoNewAsync(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string createBy, string type) {
            this.saveSynnexInfoNewAsync(inboudid, ADD1, ADD2, ADD3, ADD4, SN, status, msgid, createBy, type, null);
        }
        
        /// <remarks/>
        public void saveSynnexInfoNewAsync(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string createBy, string type, object userState) {
            if ((this.saveSynnexInfoNewOperationCompleted == null)) {
                this.saveSynnexInfoNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSynnexInfoNewOperationCompleted);
            }
            this.InvokeAsync("saveSynnexInfoNew", new object[] {
                        inboudid,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        status,
                        msgid,
                        createBy,
                        type}, this.saveSynnexInfoNewOperationCompleted, userState);
        }
        
        private void OnsaveSynnexInfoNewOperationCompleted(object arg) {
            if ((this.saveSynnexInfoNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSynnexInfoNewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSynnexInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateSynnexInfo(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string editBy) {
            this.Invoke("updateSynnexInfo", new object[] {
                        inboudid,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        status,
                        msgid,
                        editBy});
        }
        
        /// <remarks/>
        public void updateSynnexInfoAsync(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string editBy) {
            this.updateSynnexInfoAsync(inboudid, ADD1, ADD2, ADD3, ADD4, SN, status, msgid, editBy, null);
        }
        
        /// <remarks/>
        public void updateSynnexInfoAsync(string inboudid, string ADD1, string ADD2, string ADD3, string ADD4, string SN, string status, string msgid, string editBy, object userState) {
            if ((this.updateSynnexInfoOperationCompleted == null)) {
                this.updateSynnexInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSynnexInfoOperationCompleted);
            }
            this.InvokeAsync("updateSynnexInfo", new object[] {
                        inboudid,
                        ADD1,
                        ADD2,
                        ADD3,
                        ADD4,
                        SN,
                        status,
                        msgid,
                        editBy}, this.updateSynnexInfoOperationCompleted, userState);
        }
        
        private void OnupdateSynnexInfoOperationCompleted(object arg) {
            if ((this.updateSynnexInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSynnexInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSynnexOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSynnexOne(string InboundID) {
            object[] results = this.Invoke("getSynnexOne", new object[] {
                        InboundID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSynnexOneAsync(string InboundID) {
            this.getSynnexOneAsync(InboundID, null);
        }
        
        /// <remarks/>
        public void getSynnexOneAsync(string InboundID, object userState) {
            if ((this.getSynnexOneOperationCompleted == null)) {
                this.getSynnexOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSynnexOneOperationCompleted);
            }
            this.InvokeAsync("getSynnexOne", new object[] {
                        InboundID}, this.getSynnexOneOperationCompleted, userState);
        }
        
        private void OngetSynnexOneOperationCompleted(object arg) {
            if ((this.getSynnexOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSynnexOneCompleted(this, new getSynnexOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCityList() {
            object[] results = this.Invoke("GetCityList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCityListAsync() {
            this.GetCityListAsync(null);
        }
        
        /// <remarks/>
        public void GetCityListAsync(object userState) {
            if ((this.GetCityListOperationCompleted == null)) {
                this.GetCityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityListOperationCompleted);
            }
            this.InvokeAsync("GetCityList", new object[0], this.GetCityListOperationCompleted, userState);
        }
        
        private void OnGetCityListOperationCompleted(object arg) {
            if ((this.GetCityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityListCompleted(this, new GetCityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistrictList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDistrictList(int CityID) {
            object[] results = this.Invoke("GetDistrictList", new object[] {
                        CityID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistrictListAsync(int CityID) {
            this.GetDistrictListAsync(CityID, null);
        }
        
        /// <remarks/>
        public void GetDistrictListAsync(int CityID, object userState) {
            if ((this.GetDistrictListOperationCompleted == null)) {
                this.GetDistrictListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistrictListOperationCompleted);
            }
            this.InvokeAsync("GetDistrictList", new object[] {
                        CityID}, this.GetDistrictListOperationCompleted, userState);
        }
        
        private void OnGetDistrictListOperationCompleted(object arg) {
            if ((this.GetDistrictListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistrictListCompleted(this, new GetDistrictListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFileInfoNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertFileInfoNew(string InboundID, string CreatrBy, string fileurl, string SourceFrom, string type) {
            this.Invoke("InsertFileInfoNew", new object[] {
                        InboundID,
                        CreatrBy,
                        fileurl,
                        SourceFrom,
                        type});
        }
        
        /// <remarks/>
        public void InsertFileInfoNewAsync(string InboundID, string CreatrBy, string fileurl, string SourceFrom, string type) {
            this.InsertFileInfoNewAsync(InboundID, CreatrBy, fileurl, SourceFrom, type, null);
        }
        
        /// <remarks/>
        public void InsertFileInfoNewAsync(string InboundID, string CreatrBy, string fileurl, string SourceFrom, string type, object userState) {
            if ((this.InsertFileInfoNewOperationCompleted == null)) {
                this.InsertFileInfoNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFileInfoNewOperationCompleted);
            }
            this.InvokeAsync("InsertFileInfoNew", new object[] {
                        InboundID,
                        CreatrBy,
                        fileurl,
                        SourceFrom,
                        type}, this.InsertFileInfoNewOperationCompleted, userState);
        }
        
        private void OnInsertFileInfoNewOperationCompleted(object arg) {
            if ((this.InsertFileInfoNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFileInfoNewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSynnexProcess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSynnexProcess(int ID, string record, System.DateTime dt, string editby, string processStatus, string type) {
            object[] results = this.Invoke("InsertSynnexProcess", new object[] {
                        ID,
                        record,
                        dt,
                        editby,
                        processStatus,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSynnexProcessAsync(int ID, string record, System.DateTime dt, string editby, string processStatus, string type) {
            this.InsertSynnexProcessAsync(ID, record, dt, editby, processStatus, type, null);
        }
        
        /// <remarks/>
        public void InsertSynnexProcessAsync(int ID, string record, System.DateTime dt, string editby, string processStatus, string type, object userState) {
            if ((this.InsertSynnexProcessOperationCompleted == null)) {
                this.InsertSynnexProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSynnexProcessOperationCompleted);
            }
            this.InvokeAsync("InsertSynnexProcess", new object[] {
                        ID,
                        record,
                        dt,
                        editby,
                        processStatus,
                        type}, this.InsertSynnexProcessOperationCompleted, userState);
        }
        
        private void OnInsertSynnexProcessOperationCompleted(object arg) {
            if ((this.InsertSynnexProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSynnexProcessCompleted(this, new InsertSynnexProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSynnexByBoth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSynnexByBoth(string InboundID, string SynnexID, string type) {
            object[] results = this.Invoke("GetSynnexByBoth", new object[] {
                        InboundID,
                        SynnexID,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSynnexByBothAsync(string InboundID, string SynnexID, string type) {
            this.GetSynnexByBothAsync(InboundID, SynnexID, type, null);
        }
        
        /// <remarks/>
        public void GetSynnexByBothAsync(string InboundID, string SynnexID, string type, object userState) {
            if ((this.GetSynnexByBothOperationCompleted == null)) {
                this.GetSynnexByBothOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSynnexByBothOperationCompleted);
            }
            this.InvokeAsync("GetSynnexByBoth", new object[] {
                        InboundID,
                        SynnexID,
                        type}, this.GetSynnexByBothOperationCompleted, userState);
        }
        
        private void OnGetSynnexByBothOperationCompleted(object arg) {
            if ((this.GetSynnexByBothCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSynnexByBothCompleted(this, new GetSynnexByBothCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveQuestionMessageForTWFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveQuestionMessageForTWFL(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO, 
                    string actionType) {
            object[] results = this.Invoke("SaveQuestionMessageForTWFL", new object[] {
                        Request_Time,
                        Type_Detail,
                        Customer_Name,
                        Customer_No,
                        Revert_Time,
                        Disposal_Status,
                        Request_Dis,
                        Disposal_Con,
                        CreatedBy,
                        CreatedDt,
                        LastEditBy,
                        LastEditDt,
                        CallInGate,
                        Member_ID,
                        HangUpTime,
                        TransferCategory,
                        ProcessRate,
                        StatusFlag,
                        PO_Number,
                        State,
                        Emergency,
                        TransCall,
                        CEAI_FLAG,
                        TransExt,
                        Shenfen,
                        Sex,
                        Advise,
                        ProjectType,
                        DeliveryTime,
                        HistoryCloseRecord,
                        CompensateAnalyse,
                        TVSize,
                        MaintainLevel,
                        MainContactNO,
                        actionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveQuestionMessageForTWFLAsync(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO, 
                    string actionType) {
            this.SaveQuestionMessageForTWFLAsync(Request_Time, Type_Detail, Customer_Name, Customer_No, Revert_Time, Disposal_Status, Request_Dis, Disposal_Con, CreatedBy, CreatedDt, LastEditBy, LastEditDt, CallInGate, Member_ID, HangUpTime, TransferCategory, ProcessRate, StatusFlag, PO_Number, State, Emergency, TransCall, CEAI_FLAG, TransExt, Shenfen, Sex, Advise, ProjectType, DeliveryTime, HistoryCloseRecord, CompensateAnalyse, TVSize, MaintainLevel, MainContactNO, actionType, null);
        }
        
        /// <remarks/>
        public void SaveQuestionMessageForTWFLAsync(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO, 
                    string actionType, 
                    object userState) {
            if ((this.SaveQuestionMessageForTWFLOperationCompleted == null)) {
                this.SaveQuestionMessageForTWFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveQuestionMessageForTWFLOperationCompleted);
            }
            this.InvokeAsync("SaveQuestionMessageForTWFL", new object[] {
                        Request_Time,
                        Type_Detail,
                        Customer_Name,
                        Customer_No,
                        Revert_Time,
                        Disposal_Status,
                        Request_Dis,
                        Disposal_Con,
                        CreatedBy,
                        CreatedDt,
                        LastEditBy,
                        LastEditDt,
                        CallInGate,
                        Member_ID,
                        HangUpTime,
                        TransferCategory,
                        ProcessRate,
                        StatusFlag,
                        PO_Number,
                        State,
                        Emergency,
                        TransCall,
                        CEAI_FLAG,
                        TransExt,
                        Shenfen,
                        Sex,
                        Advise,
                        ProjectType,
                        DeliveryTime,
                        HistoryCloseRecord,
                        CompensateAnalyse,
                        TVSize,
                        MaintainLevel,
                        MainContactNO,
                        actionType}, this.SaveQuestionMessageForTWFLOperationCompleted, userState);
        }
        
        private void OnSaveQuestionMessageForTWFLOperationCompleted(object arg) {
            if ((this.SaveQuestionMessageForTWFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveQuestionMessageForTWFLCompleted(this, new SaveQuestionMessageForTWFLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPidByCategoryForTWFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPidByCategoryForTWFL(int categoryId, string actionType) {
            object[] results = this.Invoke("GetPidByCategoryForTWFL", new object[] {
                        categoryId,
                        actionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPidByCategoryForTWFLAsync(int categoryId, string actionType) {
            this.GetPidByCategoryForTWFLAsync(categoryId, actionType, null);
        }
        
        /// <remarks/>
        public void GetPidByCategoryForTWFLAsync(int categoryId, string actionType, object userState) {
            if ((this.GetPidByCategoryForTWFLOperationCompleted == null)) {
                this.GetPidByCategoryForTWFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPidByCategoryForTWFLOperationCompleted);
            }
            this.InvokeAsync("GetPidByCategoryForTWFL", new object[] {
                        categoryId,
                        actionType}, this.GetPidByCategoryForTWFLOperationCompleted, userState);
        }
        
        private void OnGetPidByCategoryForTWFLOperationCompleted(object arg) {
            if ((this.GetPidByCategoryForTWFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPidByCategoryForTWFLCompleted(this, new GetPidByCategoryForTWFLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertInboundTypeForTWFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertInboundTypeForTWFL(string InboundID, string EditPerson, string Date, string categoryID, string actiontype) {
            this.Invoke("InsertInboundTypeForTWFL", new object[] {
                        InboundID,
                        EditPerson,
                        Date,
                        categoryID,
                        actiontype});
        }
        
        /// <remarks/>
        public void InsertInboundTypeForTWFLAsync(string InboundID, string EditPerson, string Date, string categoryID, string actiontype) {
            this.InsertInboundTypeForTWFLAsync(InboundID, EditPerson, Date, categoryID, actiontype, null);
        }
        
        /// <remarks/>
        public void InsertInboundTypeForTWFLAsync(string InboundID, string EditPerson, string Date, string categoryID, string actiontype, object userState) {
            if ((this.InsertInboundTypeForTWFLOperationCompleted == null)) {
                this.InsertInboundTypeForTWFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInboundTypeForTWFLOperationCompleted);
            }
            this.InvokeAsync("InsertInboundTypeForTWFL", new object[] {
                        InboundID,
                        EditPerson,
                        Date,
                        categoryID,
                        actiontype}, this.InsertInboundTypeForTWFLOperationCompleted, userState);
        }
        
        private void OnInsertInboundTypeForTWFLOperationCompleted(object arg) {
            if ((this.InsertInboundTypeForTWFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInboundTypeForTWFLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertLogForTWFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertLogForTWFL(string Agentid, string Agentname, string inboundno, string lasteditby, string pjttype, string tvsize, string caseid, string actiontype) {
            this.Invoke("insertLogForTWFL", new object[] {
                        Agentid,
                        Agentname,
                        inboundno,
                        lasteditby,
                        pjttype,
                        tvsize,
                        caseid,
                        actiontype});
        }
        
        /// <remarks/>
        public void insertLogForTWFLAsync(string Agentid, string Agentname, string inboundno, string lasteditby, string pjttype, string tvsize, string caseid, string actiontype) {
            this.insertLogForTWFLAsync(Agentid, Agentname, inboundno, lasteditby, pjttype, tvsize, caseid, actiontype, null);
        }
        
        /// <remarks/>
        public void insertLogForTWFLAsync(string Agentid, string Agentname, string inboundno, string lasteditby, string pjttype, string tvsize, string caseid, string actiontype, object userState) {
            if ((this.insertLogForTWFLOperationCompleted == null)) {
                this.insertLogForTWFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertLogForTWFLOperationCompleted);
            }
            this.InvokeAsync("insertLogForTWFL", new object[] {
                        Agentid,
                        Agentname,
                        inboundno,
                        lasteditby,
                        pjttype,
                        tvsize,
                        caseid,
                        actiontype}, this.insertLogForTWFLOperationCompleted, userState);
        }
        
        private void OninsertLogForTWFLOperationCompleted(object arg) {
            if ((this.insertLogForTWFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertLogForTWFLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBulletinList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBulletinList(string UserID, int BulletinTypeID, string Subject, System.DateTime begindt, System.DateTime enddt) {
            object[] results = this.Invoke("GetBulletinList", new object[] {
                        UserID,
                        BulletinTypeID,
                        Subject,
                        begindt,
                        enddt});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBulletinListAsync(string UserID, int BulletinTypeID, string Subject, System.DateTime begindt, System.DateTime enddt) {
            this.GetBulletinListAsync(UserID, BulletinTypeID, Subject, begindt, enddt, null);
        }
        
        /// <remarks/>
        public void GetBulletinListAsync(string UserID, int BulletinTypeID, string Subject, System.DateTime begindt, System.DateTime enddt, object userState) {
            if ((this.GetBulletinListOperationCompleted == null)) {
                this.GetBulletinListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBulletinListOperationCompleted);
            }
            this.InvokeAsync("GetBulletinList", new object[] {
                        UserID,
                        BulletinTypeID,
                        Subject,
                        begindt,
                        enddt}, this.GetBulletinListOperationCompleted, userState);
        }
        
        private void OnGetBulletinListOperationCompleted(object arg) {
            if ((this.GetBulletinListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBulletinListCompleted(this, new GetBulletinListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBulletinOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBulletinOne(string UserID, int BulletinID) {
            object[] results = this.Invoke("GetBulletinOne", new object[] {
                        UserID,
                        BulletinID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBulletinOneAsync(string UserID, int BulletinID) {
            this.GetBulletinOneAsync(UserID, BulletinID, null);
        }
        
        /// <remarks/>
        public void GetBulletinOneAsync(string UserID, int BulletinID, object userState) {
            if ((this.GetBulletinOneOperationCompleted == null)) {
                this.GetBulletinOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBulletinOneOperationCompleted);
            }
            this.InvokeAsync("GetBulletinOne", new object[] {
                        UserID,
                        BulletinID}, this.GetBulletinOneOperationCompleted, userState);
        }
        
        private void OnGetBulletinOneOperationCompleted(object arg) {
            if ((this.GetBulletinOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBulletinOneCompleted(this, new GetBulletinOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBulletinRead", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertBulletinRead(string UserID, int BulletinID) {
            this.Invoke("InsertBulletinRead", new object[] {
                        UserID,
                        BulletinID});
        }
        
        /// <remarks/>
        public void InsertBulletinReadAsync(string UserID, int BulletinID) {
            this.InsertBulletinReadAsync(UserID, BulletinID, null);
        }
        
        /// <remarks/>
        public void InsertBulletinReadAsync(string UserID, int BulletinID, object userState) {
            if ((this.InsertBulletinReadOperationCompleted == null)) {
                this.InsertBulletinReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBulletinReadOperationCompleted);
            }
            this.InvokeAsync("InsertBulletinRead", new object[] {
                        UserID,
                        BulletinID}, this.InsertBulletinReadOperationCompleted, userState);
        }
        
        private void OnInsertBulletinReadOperationCompleted(object arg) {
            if ((this.InsertBulletinReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBulletinReadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertInboundTypeForSynnex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertInboundTypeForSynnex(string InboundID, string EditPerson, string Date, string PID, string type) {
            this.Invoke("InsertInboundTypeForSynnex", new object[] {
                        InboundID,
                        EditPerson,
                        Date,
                        PID,
                        type});
        }
        
        /// <remarks/>
        public void InsertInboundTypeForSynnexAsync(string InboundID, string EditPerson, string Date, string PID, string type) {
            this.InsertInboundTypeForSynnexAsync(InboundID, EditPerson, Date, PID, type, null);
        }
        
        /// <remarks/>
        public void InsertInboundTypeForSynnexAsync(string InboundID, string EditPerson, string Date, string PID, string type, object userState) {
            if ((this.InsertInboundTypeForSynnexOperationCompleted == null)) {
                this.InsertInboundTypeForSynnexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInboundTypeForSynnexOperationCompleted);
            }
            this.InvokeAsync("InsertInboundTypeForSynnex", new object[] {
                        InboundID,
                        EditPerson,
                        Date,
                        PID,
                        type}, this.InsertInboundTypeForSynnexOperationCompleted, userState);
        }
        
        private void OnInsertInboundTypeForSynnexOperationCompleted(object arg) {
            if ((this.InsertInboundTypeForSynnexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInboundTypeForSynnexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SynnexUpdateModel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SynnexUpdateModel(int ID, string EditPerson, string Model, int PID, string record, string type) {
            this.Invoke("SynnexUpdateModel", new object[] {
                        ID,
                        EditPerson,
                        Model,
                        PID,
                        record,
                        type});
        }
        
        /// <remarks/>
        public void SynnexUpdateModelAsync(int ID, string EditPerson, string Model, int PID, string record, string type) {
            this.SynnexUpdateModelAsync(ID, EditPerson, Model, PID, record, type, null);
        }
        
        /// <remarks/>
        public void SynnexUpdateModelAsync(int ID, string EditPerson, string Model, int PID, string record, string type, object userState) {
            if ((this.SynnexUpdateModelOperationCompleted == null)) {
                this.SynnexUpdateModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynnexUpdateModelOperationCompleted);
            }
            this.InvokeAsync("SynnexUpdateModel", new object[] {
                        ID,
                        EditPerson,
                        Model,
                        PID,
                        record,
                        type}, this.SynnexUpdateModelOperationCompleted, userState);
        }
        
        private void OnSynnexUpdateModelOperationCompleted(object arg) {
            if ((this.SynnexUpdateModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynnexUpdateModelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectByModelForSynnex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProjectByModelForSynnex(string model, string type) {
            object[] results = this.Invoke("GetProjectByModelForSynnex", new object[] {
                        model,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectByModelForSynnexAsync(string model, string type) {
            this.GetProjectByModelForSynnexAsync(model, type, null);
        }
        
        /// <remarks/>
        public void GetProjectByModelForSynnexAsync(string model, string type, object userState) {
            if ((this.GetProjectByModelForSynnexOperationCompleted == null)) {
                this.GetProjectByModelForSynnexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectByModelForSynnexOperationCompleted);
            }
            this.InvokeAsync("GetProjectByModelForSynnex", new object[] {
                        model,
                        type}, this.GetProjectByModelForSynnexOperationCompleted, userState);
        }
        
        private void OnGetProjectByModelForSynnexOperationCompleted(object arg) {
            if ((this.GetProjectByModelForSynnexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectByModelForSynnexCompleted(this, new GetProjectByModelForSynnexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerCallInMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerCallInMessage(int ID) {
            object[] results = this.Invoke("GetCustomerCallInMessage", new object[] {
                        ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerCallInMessageAsync(int ID) {
            this.GetCustomerCallInMessageAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetCustomerCallInMessageAsync(int ID, object userState) {
            if ((this.GetCustomerCallInMessageOperationCompleted == null)) {
                this.GetCustomerCallInMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerCallInMessageOperationCompleted);
            }
            this.InvokeAsync("GetCustomerCallInMessage", new object[] {
                        ID}, this.GetCustomerCallInMessageOperationCompleted, userState);
        }
        
        private void OnGetCustomerCallInMessageOperationCompleted(object arg) {
            if ((this.GetCustomerCallInMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerCallInMessageCompleted(this, new GetCustomerCallInMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistoryByRef1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHistoryByRef1(string Ref1, string Source) {
            object[] results = this.Invoke("GetHistoryByRef1", new object[] {
                        Ref1,
                        Source});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryByRef1Async(string Ref1, string Source) {
            this.GetHistoryByRef1Async(Ref1, Source, null);
        }
        
        /// <remarks/>
        public void GetHistoryByRef1Async(string Ref1, string Source, object userState) {
            if ((this.GetHistoryByRef1OperationCompleted == null)) {
                this.GetHistoryByRef1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryByRef1OperationCompleted);
            }
            this.InvokeAsync("GetHistoryByRef1", new object[] {
                        Ref1,
                        Source}, this.GetHistoryByRef1OperationCompleted, userState);
        }
        
        private void OnGetHistoryByRef1OperationCompleted(object arg) {
            if ((this.GetHistoryByRef1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryByRef1Completed(this, new GetHistoryByRef1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTransferCategoryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getTransferCategoryList() {
            object[] results = this.Invoke("getTransferCategoryList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getTransferCategoryListAsync() {
            this.getTransferCategoryListAsync(null);
        }
        
        /// <remarks/>
        public void getTransferCategoryListAsync(object userState) {
            if ((this.getTransferCategoryListOperationCompleted == null)) {
                this.getTransferCategoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransferCategoryListOperationCompleted);
            }
            this.InvokeAsync("getTransferCategoryList", new object[0], this.getTransferCategoryListOperationCompleted, userState);
        }
        
        private void OngetTransferCategoryListOperationCompleted(object arg) {
            if ((this.getTransferCategoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransferCategoryListCompleted(this, new getTransferCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOtherMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOtherMessage(string condition) {
            object[] results = this.Invoke("GetOtherMessage", new object[] {
                        condition});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOtherMessageAsync(string condition) {
            this.GetOtherMessageAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetOtherMessageAsync(string condition, object userState) {
            if ((this.GetOtherMessageOperationCompleted == null)) {
                this.GetOtherMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOtherMessageOperationCompleted);
            }
            this.InvokeAsync("GetOtherMessage", new object[] {
                        condition}, this.GetOtherMessageOperationCompleted, userState);
        }
        
        private void OnGetOtherMessageOperationCompleted(object arg) {
            if ((this.GetOtherMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOtherMessageCompleted(this, new GetOtherMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCallCenterLeaderMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallCenterLeaderMessage() {
            object[] results = this.Invoke("GetCallCenterLeaderMessage", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallCenterLeaderMessageAsync() {
            this.GetCallCenterLeaderMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetCallCenterLeaderMessageAsync(object userState) {
            if ((this.GetCallCenterLeaderMessageOperationCompleted == null)) {
                this.GetCallCenterLeaderMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallCenterLeaderMessageOperationCompleted);
            }
            this.InvokeAsync("GetCallCenterLeaderMessage", new object[0], this.GetCallCenterLeaderMessageOperationCompleted, userState);
        }
        
        private void OnGetCallCenterLeaderMessageOperationCompleted(object arg) {
            if ((this.GetCallCenterLeaderMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallCenterLeaderMessageCompleted(this, new GetCallCenterLeaderMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEngineerMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEngineerMessage() {
            object[] results = this.Invoke("GetEngineerMessage", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEngineerMessageAsync() {
            this.GetEngineerMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetEngineerMessageAsync(object userState) {
            if ((this.GetEngineerMessageOperationCompleted == null)) {
                this.GetEngineerMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEngineerMessageOperationCompleted);
            }
            this.InvokeAsync("GetEngineerMessage", new object[0], this.GetEngineerMessageOperationCompleted, userState);
        }
        
        private void OnGetEngineerMessageOperationCompleted(object arg) {
            if ((this.GetEngineerMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEngineerMessageCompleted(this, new GetEngineerMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelCallInMessageDoingOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelCallInMessageDoingOne(int ID) {
            object[] results = this.Invoke("SelCallInMessageDoingOne", new object[] {
                        ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelCallInMessageDoingOneAsync(int ID) {
            this.SelCallInMessageDoingOneAsync(ID, null);
        }
        
        /// <remarks/>
        public void SelCallInMessageDoingOneAsync(int ID, object userState) {
            if ((this.SelCallInMessageDoingOneOperationCompleted == null)) {
                this.SelCallInMessageDoingOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelCallInMessageDoingOneOperationCompleted);
            }
            this.InvokeAsync("SelCallInMessageDoingOne", new object[] {
                        ID}, this.SelCallInMessageDoingOneOperationCompleted, userState);
        }
        
        private void OnSelCallInMessageDoingOneOperationCompleted(object arg) {
            if ((this.SelCallInMessageDoingOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelCallInMessageDoingOneCompleted(this, new SelCallInMessageDoingOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelCallInMessageDoing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelCallInMessageDoing(System.DateTime Time, string Name) {
            object[] results = this.Invoke("SelCallInMessageDoing", new object[] {
                        Time,
                        Name});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelCallInMessageDoingAsync(System.DateTime Time, string Name) {
            this.SelCallInMessageDoingAsync(Time, Name, null);
        }
        
        /// <remarks/>
        public void SelCallInMessageDoingAsync(System.DateTime Time, string Name, object userState) {
            if ((this.SelCallInMessageDoingOperationCompleted == null)) {
                this.SelCallInMessageDoingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelCallInMessageDoingOperationCompleted);
            }
            this.InvokeAsync("SelCallInMessageDoing", new object[] {
                        Time,
                        Name}, this.SelCallInMessageDoingOperationCompleted, userState);
        }
        
        private void OnSelCallInMessageDoingOperationCompleted(object arg) {
            if ((this.SelCallInMessageDoingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelCallInMessageDoingCompleted(this, new SelCallInMessageDoingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTheCustomerCallInMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddTheCustomerCallInMessage(int ID, string condition1, string condition2, System.DateTime condition3, string condition4, System.DateTime condition5, string condition6, string TransferCategory) {
            object[] results = this.Invoke("AddTheCustomerCallInMessage", new object[] {
                        ID,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        condition5,
                        condition6,
                        TransferCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTheCustomerCallInMessageAsync(int ID, string condition1, string condition2, System.DateTime condition3, string condition4, System.DateTime condition5, string condition6, string TransferCategory) {
            this.AddTheCustomerCallInMessageAsync(ID, condition1, condition2, condition3, condition4, condition5, condition6, TransferCategory, null);
        }
        
        /// <remarks/>
        public void AddTheCustomerCallInMessageAsync(int ID, string condition1, string condition2, System.DateTime condition3, string condition4, System.DateTime condition5, string condition6, string TransferCategory, object userState) {
            if ((this.AddTheCustomerCallInMessageOperationCompleted == null)) {
                this.AddTheCustomerCallInMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTheCustomerCallInMessageOperationCompleted);
            }
            this.InvokeAsync("AddTheCustomerCallInMessage", new object[] {
                        ID,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        condition5,
                        condition6,
                        TransferCategory}, this.AddTheCustomerCallInMessageOperationCompleted, userState);
        }
        
        private void OnAddTheCustomerCallInMessageOperationCompleted(object arg) {
            if ((this.AddTheCustomerCallInMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTheCustomerCallInMessageCompleted(this, new AddTheCustomerCallInMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTheCustomerCallInMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTheCustomerCallInMessage(int ID, string Request_Dis, string DispositEvolve, string disposal_Status, string Disposal_Con, string LastEditBy, System.DateTime LastEditDt, string Request_Type, string Customer_Name, string TransferCategory, string Emergency, string MainContactNO, string CallinGate) {
            this.Invoke("UpdateTheCustomerCallInMessage", new object[] {
                        ID,
                        Request_Dis,
                        DispositEvolve,
                        disposal_Status,
                        Disposal_Con,
                        LastEditBy,
                        LastEditDt,
                        Request_Type,
                        Customer_Name,
                        TransferCategory,
                        Emergency,
                        MainContactNO,
                        CallinGate});
        }
        
        /// <remarks/>
        public void UpdateTheCustomerCallInMessageAsync(int ID, string Request_Dis, string DispositEvolve, string disposal_Status, string Disposal_Con, string LastEditBy, System.DateTime LastEditDt, string Request_Type, string Customer_Name, string TransferCategory, string Emergency, string MainContactNO, string CallinGate) {
            this.UpdateTheCustomerCallInMessageAsync(ID, Request_Dis, DispositEvolve, disposal_Status, Disposal_Con, LastEditBy, LastEditDt, Request_Type, Customer_Name, TransferCategory, Emergency, MainContactNO, CallinGate, null);
        }
        
        /// <remarks/>
        public void UpdateTheCustomerCallInMessageAsync(int ID, string Request_Dis, string DispositEvolve, string disposal_Status, string Disposal_Con, string LastEditBy, System.DateTime LastEditDt, string Request_Type, string Customer_Name, string TransferCategory, string Emergency, string MainContactNO, string CallinGate, object userState) {
            if ((this.UpdateTheCustomerCallInMessageOperationCompleted == null)) {
                this.UpdateTheCustomerCallInMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTheCustomerCallInMessageOperationCompleted);
            }
            this.InvokeAsync("UpdateTheCustomerCallInMessage", new object[] {
                        ID,
                        Request_Dis,
                        DispositEvolve,
                        disposal_Status,
                        Disposal_Con,
                        LastEditBy,
                        LastEditDt,
                        Request_Type,
                        Customer_Name,
                        TransferCategory,
                        Emergency,
                        MainContactNO,
                        CallinGate}, this.UpdateTheCustomerCallInMessageOperationCompleted, userState);
        }
        
        private void OnUpdateTheCustomerCallInMessageOperationCompleted(object arg) {
            if ((this.UpdateTheCustomerCallInMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTheCustomerCallInMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoManyCallInMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDoManyCallInMessage(int ID, string roleid) {
            object[] results = this.Invoke("GetDoManyCallInMessage", new object[] {
                        ID,
                        roleid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoManyCallInMessageAsync(int ID, string roleid) {
            this.GetDoManyCallInMessageAsync(ID, roleid, null);
        }
        
        /// <remarks/>
        public void GetDoManyCallInMessageAsync(int ID, string roleid, object userState) {
            if ((this.GetDoManyCallInMessageOperationCompleted == null)) {
                this.GetDoManyCallInMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoManyCallInMessageOperationCompleted);
            }
            this.InvokeAsync("GetDoManyCallInMessage", new object[] {
                        ID,
                        roleid}, this.GetDoManyCallInMessageOperationCompleted, userState);
        }
        
        private void OnGetDoManyCallInMessageOperationCompleted(object arg) {
            if ((this.GetDoManyCallInMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoManyCallInMessageCompleted(this, new GetDoManyCallInMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelDoManyCallInMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelDoManyCallInMessage(int ID) {
            this.Invoke("DelDoManyCallInMessage", new object[] {
                        ID});
        }
        
        /// <remarks/>
        public void DelDoManyCallInMessageAsync(int ID) {
            this.DelDoManyCallInMessageAsync(ID, null);
        }
        
        /// <remarks/>
        public void DelDoManyCallInMessageAsync(int ID, object userState) {
            if ((this.DelDoManyCallInMessageOperationCompleted == null)) {
                this.DelDoManyCallInMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelDoManyCallInMessageOperationCompleted);
            }
            this.InvokeAsync("DelDoManyCallInMessage", new object[] {
                        ID}, this.DelDoManyCallInMessageOperationCompleted, userState);
        }
        
        private void OnDelDoManyCallInMessageOperationCompleted(object arg) {
            if ((this.DelDoManyCallInMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelDoManyCallInMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCallCenterLeaderAllMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallCenterLeaderAllMessage(string condition) {
            object[] results = this.Invoke("GetCallCenterLeaderAllMessage", new object[] {
                        condition});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallCenterLeaderAllMessageAsync(string condition) {
            this.GetCallCenterLeaderAllMessageAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetCallCenterLeaderAllMessageAsync(string condition, object userState) {
            if ((this.GetCallCenterLeaderAllMessageOperationCompleted == null)) {
                this.GetCallCenterLeaderAllMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallCenterLeaderAllMessageOperationCompleted);
            }
            this.InvokeAsync("GetCallCenterLeaderAllMessage", new object[] {
                        condition}, this.GetCallCenterLeaderAllMessageOperationCompleted, userState);
        }
        
        private void OnGetCallCenterLeaderAllMessageOperationCompleted(object arg) {
            if ((this.GetCallCenterLeaderAllMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallCenterLeaderAllMessageCompleted(this, new GetCallCenterLeaderAllMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEngineerAllMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEngineerAllMessage(string condition) {
            object[] results = this.Invoke("GetEngineerAllMessage", new object[] {
                        condition});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEngineerAllMessageAsync(string condition) {
            this.GetEngineerAllMessageAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetEngineerAllMessageAsync(string condition, object userState) {
            if ((this.GetEngineerAllMessageOperationCompleted == null)) {
                this.GetEngineerAllMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEngineerAllMessageOperationCompleted);
            }
            this.InvokeAsync("GetEngineerAllMessage", new object[] {
                        condition}, this.GetEngineerAllMessageOperationCompleted, userState);
        }
        
        private void OnGetEngineerAllMessageOperationCompleted(object arg) {
            if ((this.GetEngineerAllMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEngineerAllMessageCompleted(this, new GetEngineerAllMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCallCategoryMenuData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallCategoryMenuData() {
            object[] results = this.Invoke("GetCallCategoryMenuData", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallCategoryMenuDataAsync() {
            this.GetCallCategoryMenuDataAsync(null);
        }
        
        /// <remarks/>
        public void GetCallCategoryMenuDataAsync(object userState) {
            if ((this.GetCallCategoryMenuDataOperationCompleted == null)) {
                this.GetCallCategoryMenuDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallCategoryMenuDataOperationCompleted);
            }
            this.InvokeAsync("GetCallCategoryMenuData", new object[0], this.GetCallCategoryMenuDataOperationCompleted, userState);
        }
        
        private void OnGetCallCategoryMenuDataOperationCompleted(object arg) {
            if ((this.GetCallCategoryMenuDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallCategoryMenuDataCompleted(this, new GetCallCategoryMenuDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransferDdlMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransferDdlMessage() {
            object[] results = this.Invoke("GetTransferDdlMessage", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferDdlMessageAsync() {
            this.GetTransferDdlMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetTransferDdlMessageAsync(object userState) {
            if ((this.GetTransferDdlMessageOperationCompleted == null)) {
                this.GetTransferDdlMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferDdlMessageOperationCompleted);
            }
            this.InvokeAsync("GetTransferDdlMessage", new object[0], this.GetTransferDdlMessageOperationCompleted, userState);
        }
        
        private void OnGetTransferDdlMessageOperationCompleted(object arg) {
            if ((this.GetTransferDdlMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferDdlMessageCompleted(this, new GetTransferDdlMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCostomerType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCostomerType() {
            object[] results = this.Invoke("GetCostomerType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCostomerTypeAsync() {
            this.GetCostomerTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetCostomerTypeAsync(object userState) {
            if ((this.GetCostomerTypeOperationCompleted == null)) {
                this.GetCostomerTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCostomerTypeOperationCompleted);
            }
            this.InvokeAsync("GetCostomerType", new object[0], this.GetCostomerTypeOperationCompleted, userState);
        }
        
        private void OnGetCostomerTypeOperationCompleted(object arg) {
            if ((this.GetCostomerTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCostomerTypeCompleted(this, new GetCostomerTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCallInMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCallInMessage(
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency) {
            object[] results = this.Invoke("GetAllCallInMessage", new object[] {
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate,
                        ProjectType,
                        TVSize,
                        MaintainLevel,
                        Emergency});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCallInMessageAsync(
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency) {
            this.GetAllCallInMessageAsync(Order_num, condition1, condition2, condition3, condition4, Time1, Time2, condition5, condition6, condition7, Shenfen, TransferCategoryID, ProcessRate, ProjectType, TVSize, MaintainLevel, Emergency, null);
        }
        
        /// <remarks/>
        public void GetAllCallInMessageAsync(
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency, 
                    object userState) {
            if ((this.GetAllCallInMessageOperationCompleted == null)) {
                this.GetAllCallInMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCallInMessageOperationCompleted);
            }
            this.InvokeAsync("GetAllCallInMessage", new object[] {
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate,
                        ProjectType,
                        TVSize,
                        MaintainLevel,
                        Emergency}, this.GetAllCallInMessageOperationCompleted, userState);
        }
        
        private void OnGetAllCallInMessageOperationCompleted(object arg) {
            if ((this.GetAllCallInMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCallInMessageCompleted(this, new GetAllCallInMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCallInMessageOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCallInMessageOne(string Order_num, string condition1, string condition2, string condition3, string condition4, System.DateTime Time1, System.DateTime Time2, string condition5, string condition6, string condition7, string Shenfen, string TransferCategoryID, string ProcessRate, string ProjectType) {
            object[] results = this.Invoke("GetAllCallInMessageOne", new object[] {
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate,
                        ProjectType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCallInMessageOneAsync(string Order_num, string condition1, string condition2, string condition3, string condition4, System.DateTime Time1, System.DateTime Time2, string condition5, string condition6, string condition7, string Shenfen, string TransferCategoryID, string ProcessRate, string ProjectType) {
            this.GetAllCallInMessageOneAsync(Order_num, condition1, condition2, condition3, condition4, Time1, Time2, condition5, condition6, condition7, Shenfen, TransferCategoryID, ProcessRate, ProjectType, null);
        }
        
        /// <remarks/>
        public void GetAllCallInMessageOneAsync(string Order_num, string condition1, string condition2, string condition3, string condition4, System.DateTime Time1, System.DateTime Time2, string condition5, string condition6, string condition7, string Shenfen, string TransferCategoryID, string ProcessRate, string ProjectType, object userState) {
            if ((this.GetAllCallInMessageOneOperationCompleted == null)) {
                this.GetAllCallInMessageOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCallInMessageOneOperationCompleted);
            }
            this.InvokeAsync("GetAllCallInMessageOne", new object[] {
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate,
                        ProjectType}, this.GetAllCallInMessageOneOperationCompleted, userState);
        }
        
        private void OnGetAllCallInMessageOneOperationCompleted(object arg) {
            if ((this.GetAllCallInMessageOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCallInMessageOneCompleted(this, new GetAllCallInMessageOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCallInMessageTwo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCallInMessageTwo(string Order_num, string condition1, string condition2, string condition3, string condition4, System.DateTime Time1, System.DateTime Time2, string condition5, string condition6, string condition7, string Shenfen, string TransferCategoryID, string ProcessRate) {
            object[] results = this.Invoke("GetAllCallInMessageTwo", new object[] {
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCallInMessageTwoAsync(string Order_num, string condition1, string condition2, string condition3, string condition4, System.DateTime Time1, System.DateTime Time2, string condition5, string condition6, string condition7, string Shenfen, string TransferCategoryID, string ProcessRate) {
            this.GetAllCallInMessageTwoAsync(Order_num, condition1, condition2, condition3, condition4, Time1, Time2, condition5, condition6, condition7, Shenfen, TransferCategoryID, ProcessRate, null);
        }
        
        /// <remarks/>
        public void GetAllCallInMessageTwoAsync(string Order_num, string condition1, string condition2, string condition3, string condition4, System.DateTime Time1, System.DateTime Time2, string condition5, string condition6, string condition7, string Shenfen, string TransferCategoryID, string ProcessRate, object userState) {
            if ((this.GetAllCallInMessageTwoOperationCompleted == null)) {
                this.GetAllCallInMessageTwoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCallInMessageTwoOperationCompleted);
            }
            this.InvokeAsync("GetAllCallInMessageTwo", new object[] {
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate}, this.GetAllCallInMessageTwoOperationCompleted, userState);
        }
        
        private void OnGetAllCallInMessageTwoOperationCompleted(object arg) {
            if ((this.GetAllCallInMessageTwoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCallInMessageTwoCompleted(this, new GetAllCallInMessageTwoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCustomerCallInMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelCustomerCallInMessage(int ID, string DeletedUser) {
            this.Invoke("DelCustomerCallInMessage", new object[] {
                        ID,
                        DeletedUser});
        }
        
        /// <remarks/>
        public void DelCustomerCallInMessageAsync(int ID, string DeletedUser) {
            this.DelCustomerCallInMessageAsync(ID, DeletedUser, null);
        }
        
        /// <remarks/>
        public void DelCustomerCallInMessageAsync(int ID, string DeletedUser, object userState) {
            if ((this.DelCustomerCallInMessageOperationCompleted == null)) {
                this.DelCustomerCallInMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelCustomerCallInMessageOperationCompleted);
            }
            this.InvokeAsync("DelCustomerCallInMessage", new object[] {
                        ID,
                        DeletedUser}, this.DelCustomerCallInMessageOperationCompleted, userState);
        }
        
        private void OnDelCustomerCallInMessageOperationCompleted(object arg) {
            if ((this.DelCustomerCallInMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelCustomerCallInMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getInboundProgressDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getInboundProgressDetailList(string stype, int Inbound_ID, string Htmltaglib) {
            object[] results = this.Invoke("getInboundProgressDetailList", new object[] {
                        stype,
                        Inbound_ID,
                        Htmltaglib});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getInboundProgressDetailListAsync(string stype, int Inbound_ID, string Htmltaglib) {
            this.getInboundProgressDetailListAsync(stype, Inbound_ID, Htmltaglib, null);
        }
        
        /// <remarks/>
        public void getInboundProgressDetailListAsync(string stype, int Inbound_ID, string Htmltaglib, object userState) {
            if ((this.getInboundProgressDetailListOperationCompleted == null)) {
                this.getInboundProgressDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInboundProgressDetailListOperationCompleted);
            }
            this.InvokeAsync("getInboundProgressDetailList", new object[] {
                        stype,
                        Inbound_ID,
                        Htmltaglib}, this.getInboundProgressDetailListOperationCompleted, userState);
        }
        
        private void OngetInboundProgressDetailListOperationCompleted(object arg) {
            if ((this.getInboundProgressDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInboundProgressDetailListCompleted(this, new getInboundProgressDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccount(string account, string password) {
            object[] results = this.Invoke("GetAccount", new object[] {
                        account,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountAsync(string account, string password) {
            this.GetAccountAsync(account, password, null);
        }
        
        /// <remarks/>
        public void GetAccountAsync(string account, string password, object userState) {
            if ((this.GetAccountOperationCompleted == null)) {
                this.GetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountOperationCompleted);
            }
            this.InvokeAsync("GetAccount", new object[] {
                        account,
                        password}, this.GetAccountOperationCompleted, userState);
        }
        
        private void OnGetAccountOperationCompleted(object arg) {
            if ((this.GetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMonitorAgentLogon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertMonitorAgentLogon(string AgentID, string Station) {
            this.Invoke("InsertMonitorAgentLogon", new object[] {
                        AgentID,
                        Station});
        }
        
        /// <remarks/>
        public void InsertMonitorAgentLogonAsync(string AgentID, string Station) {
            this.InsertMonitorAgentLogonAsync(AgentID, Station, null);
        }
        
        /// <remarks/>
        public void InsertMonitorAgentLogonAsync(string AgentID, string Station, object userState) {
            if ((this.InsertMonitorAgentLogonOperationCompleted == null)) {
                this.InsertMonitorAgentLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMonitorAgentLogonOperationCompleted);
            }
            this.InvokeAsync("InsertMonitorAgentLogon", new object[] {
                        AgentID,
                        Station}, this.InsertMonitorAgentLogonOperationCompleted, userState);
        }
        
        private void OnInsertMonitorAgentLogonOperationCompleted(object arg) {
            if ((this.InsertMonitorAgentLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMonitorAgentLogonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCheckLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertCheckLog(string account) {
            this.Invoke("InsertCheckLog", new object[] {
                        account});
        }
        
        /// <remarks/>
        public void InsertCheckLogAsync(string account) {
            this.InsertCheckLogAsync(account, null);
        }
        
        /// <remarks/>
        public void InsertCheckLogAsync(string account, object userState) {
            if ((this.InsertCheckLogOperationCompleted == null)) {
                this.InsertCheckLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCheckLogOperationCompleted);
            }
            this.InvokeAsync("InsertCheckLog", new object[] {
                        account}, this.InsertCheckLogOperationCompleted, userState);
        }
        
        private void OnInsertCheckLogOperationCompleted(object arg) {
            if ((this.InsertCheckLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCheckLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAgent(string agentid) {
            object[] results = this.Invoke("GetAgent", new object[] {
                        agentid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentAsync(string agentid) {
            this.GetAgentAsync(agentid, null);
        }
        
        /// <remarks/>
        public void GetAgentAsync(string agentid, object userState) {
            if ((this.GetAgentOperationCompleted == null)) {
                this.GetAgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentOperationCompleted);
            }
            this.InvokeAsync("GetAgent", new object[] {
                        agentid}, this.GetAgentOperationCompleted, userState);
        }
        
        private void OnGetAgentOperationCompleted(object arg) {
            if ((this.GetAgentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentCompleted(this, new GetAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRole(int roleid) {
            object[] results = this.Invoke("GetRole", new object[] {
                        roleid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleAsync(int roleid) {
            this.GetRoleAsync(roleid, null);
        }
        
        /// <remarks/>
        public void GetRoleAsync(int roleid, object userState) {
            if ((this.GetRoleOperationCompleted == null)) {
                this.GetRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleOperationCompleted);
            }
            this.InvokeAsync("GetRole", new object[] {
                        roleid}, this.GetRoleOperationCompleted, userState);
        }
        
        private void OnGetRoleOperationCompleted(object arg) {
            if ((this.GetRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleCompleted(this, new GetRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccountPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAccountPassword(string account, string password) {
            object[] results = this.Invoke("UpdateAccountPassword", new object[] {
                        account,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountPasswordAsync(string account, string password) {
            this.UpdateAccountPasswordAsync(account, password, null);
        }
        
        /// <remarks/>
        public void UpdateAccountPasswordAsync(string account, string password, object userState) {
            if ((this.UpdateAccountPasswordOperationCompleted == null)) {
                this.UpdateAccountPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountPassword", new object[] {
                        account,
                        password}, this.UpdateAccountPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateAccountPasswordOperationCompleted(object arg) {
            if ((this.UpdateAccountPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountPasswordCompleted(this, new UpdateAccountPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadCallPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReadCallPassword(string account) {
            object[] results = this.Invoke("ReadCallPassword", new object[] {
                        account});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadCallPasswordAsync(string account) {
            this.ReadCallPasswordAsync(account, null);
        }
        
        /// <remarks/>
        public void ReadCallPasswordAsync(string account, object userState) {
            if ((this.ReadCallPasswordOperationCompleted == null)) {
                this.ReadCallPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadCallPasswordOperationCompleted);
            }
            this.InvokeAsync("ReadCallPassword", new object[] {
                        account}, this.ReadCallPasswordOperationCompleted, userState);
        }
        
        private void OnReadCallPasswordOperationCompleted(object arg) {
            if ((this.ReadCallPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCallPasswordCompleted(this, new ReadCallPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAgentLogon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAgentLogon(string AgentID, string IP, string HostName, string Station) {
            object[] results = this.Invoke("InsertAgentLogon", new object[] {
                        AgentID,
                        IP,
                        HostName,
                        Station});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAgentLogonAsync(string AgentID, string IP, string HostName, string Station) {
            this.InsertAgentLogonAsync(AgentID, IP, HostName, Station, null);
        }
        
        /// <remarks/>
        public void InsertAgentLogonAsync(string AgentID, string IP, string HostName, string Station, object userState) {
            if ((this.InsertAgentLogonOperationCompleted == null)) {
                this.InsertAgentLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAgentLogonOperationCompleted);
            }
            this.InvokeAsync("InsertAgentLogon", new object[] {
                        AgentID,
                        IP,
                        HostName,
                        Station}, this.InsertAgentLogonOperationCompleted, userState);
        }
        
        private void OnInsertAgentLogonOperationCompleted(object arg) {
            if ((this.InsertAgentLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAgentLogonCompleted(this, new InsertAgentLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserAuthority", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getUserAuthority(string UserAccount) {
            object[] results = this.Invoke("getUserAuthority", new object[] {
                        UserAccount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getUserAuthorityAsync(string UserAccount) {
            this.getUserAuthorityAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void getUserAuthorityAsync(string UserAccount, object userState) {
            if ((this.getUserAuthorityOperationCompleted == null)) {
                this.getUserAuthorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserAuthorityOperationCompleted);
            }
            this.InvokeAsync("getUserAuthority", new object[] {
                        UserAccount}, this.getUserAuthorityOperationCompleted, userState);
        }
        
        private void OngetUserAuthorityOperationCompleted(object arg) {
            if ((this.getUserAuthorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserAuthorityCompleted(this, new getUserAuthorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParentMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetParentMenu(string roleid) {
            object[] results = this.Invoke("GetParentMenu", new object[] {
                        roleid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetParentMenuAsync(string roleid) {
            this.GetParentMenuAsync(roleid, null);
        }
        
        /// <remarks/>
        public void GetParentMenuAsync(string roleid, object userState) {
            if ((this.GetParentMenuOperationCompleted == null)) {
                this.GetParentMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentMenuOperationCompleted);
            }
            this.InvokeAsync("GetParentMenu", new object[] {
                        roleid}, this.GetParentMenuOperationCompleted, userState);
        }
        
        private void OnGetParentMenuOperationCompleted(object arg) {
            if ((this.GetParentMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentMenuCompleted(this, new GetParentMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubMenu(string roleid, string parentmenuid) {
            object[] results = this.Invoke("GetSubMenu", new object[] {
                        roleid,
                        parentmenuid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubMenuAsync(string roleid, string parentmenuid) {
            this.GetSubMenuAsync(roleid, parentmenuid, null);
        }
        
        /// <remarks/>
        public void GetSubMenuAsync(string roleid, string parentmenuid, object userState) {
            if ((this.GetSubMenuOperationCompleted == null)) {
                this.GetSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubMenuOperationCompleted);
            }
            this.InvokeAsync("GetSubMenu", new object[] {
                        roleid,
                        parentmenuid}, this.GetSubMenuOperationCompleted, userState);
        }
        
        private void OnGetSubMenuOperationCompleted(object arg) {
            if ((this.GetSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubMenuCompleted(this, new GetSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLogoutDt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLogoutDt(string ID) {
            object[] results = this.Invoke("UpdateLogoutDt", new object[] {
                        ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLogoutDtAsync(string ID) {
            this.UpdateLogoutDtAsync(ID, null);
        }
        
        /// <remarks/>
        public void UpdateLogoutDtAsync(string ID, object userState) {
            if ((this.UpdateLogoutDtOperationCompleted == null)) {
                this.UpdateLogoutDtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLogoutDtOperationCompleted);
            }
            this.InvokeAsync("UpdateLogoutDt", new object[] {
                        ID}, this.UpdateLogoutDtOperationCompleted, userState);
        }
        
        private void OnUpdateLogoutDtOperationCompleted(object arg) {
            if ((this.UpdateLogoutDtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLogoutDtCompleted(this, new UpdateLogoutDtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelMonitorAgentLogout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelMonitorAgentLogout(string AgentID) {
            this.Invoke("DelMonitorAgentLogout", new object[] {
                        AgentID});
        }
        
        /// <remarks/>
        public void DelMonitorAgentLogoutAsync(string AgentID) {
            this.DelMonitorAgentLogoutAsync(AgentID, null);
        }
        
        /// <remarks/>
        public void DelMonitorAgentLogoutAsync(string AgentID, object userState) {
            if ((this.DelMonitorAgentLogoutOperationCompleted == null)) {
                this.DelMonitorAgentLogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMonitorAgentLogoutOperationCompleted);
            }
            this.InvokeAsync("DelMonitorAgentLogout", new object[] {
                        AgentID}, this.DelMonitorAgentLogoutOperationCompleted, userState);
        }
        
        private void OnDelMonitorAgentLogoutOperationCompleted(object arg) {
            if ((this.DelMonitorAgentLogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMonitorAgentLogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCallTypeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCallTypeID(string inboundId) {
            object[] results = this.Invoke("getCallTypeID", new object[] {
                        inboundId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCallTypeIDAsync(string inboundId) {
            this.getCallTypeIDAsync(inboundId, null);
        }
        
        /// <remarks/>
        public void getCallTypeIDAsync(string inboundId, object userState) {
            if ((this.getCallTypeIDOperationCompleted == null)) {
                this.getCallTypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCallTypeIDOperationCompleted);
            }
            this.InvokeAsync("getCallTypeID", new object[] {
                        inboundId}, this.getCallTypeIDOperationCompleted, userState);
        }
        
        private void OngetCallTypeIDOperationCompleted(object arg) {
            if ((this.getCallTypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCallTypeIDCompleted(this, new getCallTypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTVModel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTVModel() {
            object[] results = this.Invoke("GetTVModel", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVModelAsync() {
            this.GetTVModelAsync(null);
        }
        
        /// <remarks/>
        public void GetTVModelAsync(object userState) {
            if ((this.GetTVModelOperationCompleted == null)) {
                this.GetTVModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVModelOperationCompleted);
            }
            this.InvokeAsync("GetTVModel", new object[0], this.GetTVModelOperationCompleted, userState);
        }
        
        private void OnGetTVModelOperationCompleted(object arg) {
            if ((this.GetTVModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVModelCompleted(this, new GetTVModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTypeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTypeList() {
            object[] results = this.Invoke("GetTypeList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeListAsync() {
            this.GetTypeListAsync(null);
        }
        
        /// <remarks/>
        public void GetTypeListAsync(object userState) {
            if ((this.GetTypeListOperationCompleted == null)) {
                this.GetTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeListOperationCompleted);
            }
            this.InvokeAsync("GetTypeList", new object[0], this.GetTypeListOperationCompleted, userState);
        }
        
        private void OnGetTypeListOperationCompleted(object arg) {
            if ((this.GetTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeListCompleted(this, new GetTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertLog(string Agentid, string Agentname, string inboundno, string lasteditby, string pjttype, string tvsize, string caseid) {
            this.Invoke("insertLog", new object[] {
                        Agentid,
                        Agentname,
                        inboundno,
                        lasteditby,
                        pjttype,
                        tvsize,
                        caseid});
        }
        
        /// <remarks/>
        public void insertLogAsync(string Agentid, string Agentname, string inboundno, string lasteditby, string pjttype, string tvsize, string caseid) {
            this.insertLogAsync(Agentid, Agentname, inboundno, lasteditby, pjttype, tvsize, caseid, null);
        }
        
        /// <remarks/>
        public void insertLogAsync(string Agentid, string Agentname, string inboundno, string lasteditby, string pjttype, string tvsize, string caseid, object userState) {
            if ((this.insertLogOperationCompleted == null)) {
                this.insertLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertLogOperationCompleted);
            }
            this.InvokeAsync("insertLog", new object[] {
                        Agentid,
                        Agentname,
                        inboundno,
                        lasteditby,
                        pjttype,
                        tvsize,
                        caseid}, this.insertLogOperationCompleted, userState);
        }
        
        private void OninsertLogOperationCompleted(object arg) {
            if ((this.insertLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDispositionStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDispositionStatus(int ID, string LastEditBy) {
            this.Invoke("SetDispositionStatus", new object[] {
                        ID,
                        LastEditBy});
        }
        
        /// <remarks/>
        public void SetDispositionStatusAsync(int ID, string LastEditBy) {
            this.SetDispositionStatusAsync(ID, LastEditBy, null);
        }
        
        /// <remarks/>
        public void SetDispositionStatusAsync(int ID, string LastEditBy, object userState) {
            if ((this.SetDispositionStatusOperationCompleted == null)) {
                this.SetDispositionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDispositionStatusOperationCompleted);
            }
            this.InvokeAsync("SetDispositionStatus", new object[] {
                        ID,
                        LastEditBy}, this.SetDispositionStatusOperationCompleted, userState);
        }
        
        private void OnSetDispositionStatusOperationCompleted(object arg) {
            if ((this.SetDispositionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDispositionStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveQuestionMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveQuestionMessage(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO) {
            object[] results = this.Invoke("SaveQuestionMessage", new object[] {
                        Request_Time,
                        Type_Detail,
                        Customer_Name,
                        Customer_No,
                        Revert_Time,
                        Disposal_Status,
                        Request_Dis,
                        Disposal_Con,
                        CreatedBy,
                        CreatedDt,
                        LastEditBy,
                        LastEditDt,
                        CallInGate,
                        Member_ID,
                        HangUpTime,
                        TransferCategory,
                        ProcessRate,
                        StatusFlag,
                        PO_Number,
                        State,
                        Emergency,
                        TransCall,
                        CEAI_FLAG,
                        TransExt,
                        Shenfen,
                        Sex,
                        Advise,
                        ProjectType,
                        DeliveryTime,
                        HistoryCloseRecord,
                        CompensateAnalyse,
                        TVSize,
                        MaintainLevel,
                        MainContactNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveQuestionMessageAsync(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO) {
            this.SaveQuestionMessageAsync(Request_Time, Type_Detail, Customer_Name, Customer_No, Revert_Time, Disposal_Status, Request_Dis, Disposal_Con, CreatedBy, CreatedDt, LastEditBy, LastEditDt, CallInGate, Member_ID, HangUpTime, TransferCategory, ProcessRate, StatusFlag, PO_Number, State, Emergency, TransCall, CEAI_FLAG, TransExt, Shenfen, Sex, Advise, ProjectType, DeliveryTime, HistoryCloseRecord, CompensateAnalyse, TVSize, MaintainLevel, MainContactNO, null);
        }
        
        /// <remarks/>
        public void SaveQuestionMessageAsync(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO, 
                    object userState) {
            if ((this.SaveQuestionMessageOperationCompleted == null)) {
                this.SaveQuestionMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveQuestionMessageOperationCompleted);
            }
            this.InvokeAsync("SaveQuestionMessage", new object[] {
                        Request_Time,
                        Type_Detail,
                        Customer_Name,
                        Customer_No,
                        Revert_Time,
                        Disposal_Status,
                        Request_Dis,
                        Disposal_Con,
                        CreatedBy,
                        CreatedDt,
                        LastEditBy,
                        LastEditDt,
                        CallInGate,
                        Member_ID,
                        HangUpTime,
                        TransferCategory,
                        ProcessRate,
                        StatusFlag,
                        PO_Number,
                        State,
                        Emergency,
                        TransCall,
                        CEAI_FLAG,
                        TransExt,
                        Shenfen,
                        Sex,
                        Advise,
                        ProjectType,
                        DeliveryTime,
                        HistoryCloseRecord,
                        CompensateAnalyse,
                        TVSize,
                        MaintainLevel,
                        MainContactNO}, this.SaveQuestionMessageOperationCompleted, userState);
        }
        
        private void OnSaveQuestionMessageOperationCompleted(object arg) {
            if ((this.SaveQuestionMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveQuestionMessageCompleted(this, new SaveQuestionMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveQuestionMessageNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveQuestionMessageNew(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO, 
                    string actionType) {
            object[] results = this.Invoke("SaveQuestionMessageNew", new object[] {
                        Request_Time,
                        Type_Detail,
                        Customer_Name,
                        Customer_No,
                        Revert_Time,
                        Disposal_Status,
                        Request_Dis,
                        Disposal_Con,
                        CreatedBy,
                        CreatedDt,
                        LastEditBy,
                        LastEditDt,
                        CallInGate,
                        Member_ID,
                        HangUpTime,
                        TransferCategory,
                        ProcessRate,
                        StatusFlag,
                        PO_Number,
                        State,
                        Emergency,
                        TransCall,
                        CEAI_FLAG,
                        TransExt,
                        Shenfen,
                        Sex,
                        Advise,
                        ProjectType,
                        DeliveryTime,
                        HistoryCloseRecord,
                        CompensateAnalyse,
                        TVSize,
                        MaintainLevel,
                        MainContactNO,
                        actionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveQuestionMessageNewAsync(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO, 
                    string actionType) {
            this.SaveQuestionMessageNewAsync(Request_Time, Type_Detail, Customer_Name, Customer_No, Revert_Time, Disposal_Status, Request_Dis, Disposal_Con, CreatedBy, CreatedDt, LastEditBy, LastEditDt, CallInGate, Member_ID, HangUpTime, TransferCategory, ProcessRate, StatusFlag, PO_Number, State, Emergency, TransCall, CEAI_FLAG, TransExt, Shenfen, Sex, Advise, ProjectType, DeliveryTime, HistoryCloseRecord, CompensateAnalyse, TVSize, MaintainLevel, MainContactNO, actionType, null);
        }
        
        /// <remarks/>
        public void SaveQuestionMessageNewAsync(
                    System.DateTime Request_Time, 
                    string Type_Detail, 
                    string Customer_Name, 
                    string Customer_No, 
                    System.DateTime Revert_Time, 
                    string Disposal_Status, 
                    string Request_Dis, 
                    string Disposal_Con, 
                    string CreatedBy, 
                    System.DateTime CreatedDt, 
                    string LastEditBy, 
                    System.DateTime LastEditDt, 
                    string CallInGate, 
                    string Member_ID, 
                    System.DateTime HangUpTime, 
                    string TransferCategory, 
                    string ProcessRate, 
                    int StatusFlag, 
                    string PO_Number, 
                    int State, 
                    string Emergency, 
                    string TransCall, 
                    string CEAI_FLAG, 
                    string TransExt, 
                    string Shenfen, 
                    string Sex, 
                    string Advise, 
                    string ProjectType, 
                    string DeliveryTime, 
                    string HistoryCloseRecord, 
                    string CompensateAnalyse, 
                    string TVSize, 
                    string MaintainLevel, 
                    string MainContactNO, 
                    string actionType, 
                    object userState) {
            if ((this.SaveQuestionMessageNewOperationCompleted == null)) {
                this.SaveQuestionMessageNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveQuestionMessageNewOperationCompleted);
            }
            this.InvokeAsync("SaveQuestionMessageNew", new object[] {
                        Request_Time,
                        Type_Detail,
                        Customer_Name,
                        Customer_No,
                        Revert_Time,
                        Disposal_Status,
                        Request_Dis,
                        Disposal_Con,
                        CreatedBy,
                        CreatedDt,
                        LastEditBy,
                        LastEditDt,
                        CallInGate,
                        Member_ID,
                        HangUpTime,
                        TransferCategory,
                        ProcessRate,
                        StatusFlag,
                        PO_Number,
                        State,
                        Emergency,
                        TransCall,
                        CEAI_FLAG,
                        TransExt,
                        Shenfen,
                        Sex,
                        Advise,
                        ProjectType,
                        DeliveryTime,
                        HistoryCloseRecord,
                        CompensateAnalyse,
                        TVSize,
                        MaintainLevel,
                        MainContactNO,
                        actionType}, this.SaveQuestionMessageNewOperationCompleted, userState);
        }
        
        private void OnSaveQuestionMessageNewOperationCompleted(object arg) {
            if ((this.SaveQuestionMessageNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveQuestionMessageNewCompleted(this, new SaveQuestionMessageNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveCustomerMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveCustomerMessage(string CallIn_Phone, string Customer_Name, string Province, string City, string LastEditBy, System.DateTime LastEditDt) {
            this.Invoke("SaveCustomerMessage", new object[] {
                        CallIn_Phone,
                        Customer_Name,
                        Province,
                        City,
                        LastEditBy,
                        LastEditDt});
        }
        
        /// <remarks/>
        public void SaveCustomerMessageAsync(string CallIn_Phone, string Customer_Name, string Province, string City, string LastEditBy, System.DateTime LastEditDt) {
            this.SaveCustomerMessageAsync(CallIn_Phone, Customer_Name, Province, City, LastEditBy, LastEditDt, null);
        }
        
        /// <remarks/>
        public void SaveCustomerMessageAsync(string CallIn_Phone, string Customer_Name, string Province, string City, string LastEditBy, System.DateTime LastEditDt, object userState) {
            if ((this.SaveCustomerMessageOperationCompleted == null)) {
                this.SaveCustomerMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCustomerMessageOperationCompleted);
            }
            this.InvokeAsync("SaveCustomerMessage", new object[] {
                        CallIn_Phone,
                        Customer_Name,
                        Province,
                        City,
                        LastEditBy,
                        LastEditDt}, this.SaveCustomerMessageOperationCompleted, userState);
        }
        
        private void OnSaveCustomerMessageOperationCompleted(object arg) {
            if ((this.SaveCustomerMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCustomerMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/savetheparsent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void savetheparsent(string inboundid, string funtion, string lasteditby, string transfer) {
            this.Invoke("savetheparsent", new object[] {
                        inboundid,
                        funtion,
                        lasteditby,
                        transfer});
        }
        
        /// <remarks/>
        public void savetheparsentAsync(string inboundid, string funtion, string lasteditby, string transfer) {
            this.savetheparsentAsync(inboundid, funtion, lasteditby, transfer, null);
        }
        
        /// <remarks/>
        public void savetheparsentAsync(string inboundid, string funtion, string lasteditby, string transfer, object userState) {
            if ((this.savetheparsentOperationCompleted == null)) {
                this.savetheparsentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsavetheparsentOperationCompleted);
            }
            this.InvokeAsync("savetheparsent", new object[] {
                        inboundid,
                        funtion,
                        lasteditby,
                        transfer}, this.savetheparsentOperationCompleted, userState);
        }
        
        private void OnsavetheparsentOperationCompleted(object arg) {
            if ((this.savetheparsentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.savetheparsentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIssueList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIssueList(string TypeName) {
            object[] results = this.Invoke("GetIssueList", new object[] {
                        TypeName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIssueListAsync(string TypeName) {
            this.GetIssueListAsync(TypeName, null);
        }
        
        /// <remarks/>
        public void GetIssueListAsync(string TypeName, object userState) {
            if ((this.GetIssueListOperationCompleted == null)) {
                this.GetIssueListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIssueListOperationCompleted);
            }
            this.InvokeAsync("GetIssueList", new object[] {
                        TypeName}, this.GetIssueListOperationCompleted, userState);
        }
        
        private void OnGetIssueListOperationCompleted(object arg) {
            if ((this.GetIssueListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIssueListCompleted(this, new GetIssueListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSolutionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSolutionList(string TypeName, string Issue) {
            object[] results = this.Invoke("GetSolutionList", new object[] {
                        TypeName,
                        Issue});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSolutionListAsync(string TypeName, string Issue) {
            this.GetSolutionListAsync(TypeName, Issue, null);
        }
        
        /// <remarks/>
        public void GetSolutionListAsync(string TypeName, string Issue, object userState) {
            if ((this.GetSolutionListOperationCompleted == null)) {
                this.GetSolutionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSolutionListOperationCompleted);
            }
            this.InvokeAsync("GetSolutionList", new object[] {
                        TypeName,
                        Issue}, this.GetSolutionListOperationCompleted, userState);
        }
        
        private void OnGetSolutionListOperationCompleted(object arg) {
            if ((this.GetSolutionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSolutionListCompleted(this, new GetSolutionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectdata(string typeID) {
            object[] results = this.Invoke("selectdata", new object[] {
                        typeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectdataAsync(string typeID) {
            this.selectdataAsync(typeID, null);
        }
        
        /// <remarks/>
        public void selectdataAsync(string typeID, object userState) {
            if ((this.selectdataOperationCompleted == null)) {
                this.selectdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectdataOperationCompleted);
            }
            this.InvokeAsync("selectdata", new object[] {
                        typeID}, this.selectdataOperationCompleted, userState);
        }
        
        private void OnselectdataOperationCompleted(object arg) {
            if ((this.selectdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectdataCompleted(this, new selectdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMulInboundType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMulInboundType(string InboundID) {
            this.Invoke("DeleteMulInboundType", new object[] {
                        InboundID});
        }
        
        /// <remarks/>
        public void DeleteMulInboundTypeAsync(string InboundID) {
            this.DeleteMulInboundTypeAsync(InboundID, null);
        }
        
        /// <remarks/>
        public void DeleteMulInboundTypeAsync(string InboundID, object userState) {
            if ((this.DeleteMulInboundTypeOperationCompleted == null)) {
                this.DeleteMulInboundTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMulInboundTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteMulInboundType", new object[] {
                        InboundID}, this.DeleteMulInboundTypeOperationCompleted, userState);
        }
        
        private void OnDeleteMulInboundTypeOperationCompleted(object arg) {
            if ((this.DeleteMulInboundTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMulInboundTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMulInboundType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertMulInboundType(string InboundID, string TypeI, string TypeII, string TypeIII, string EditPerson) {
            this.Invoke("InsertMulInboundType", new object[] {
                        InboundID,
                        TypeI,
                        TypeII,
                        TypeIII,
                        EditPerson});
        }
        
        /// <remarks/>
        public void InsertMulInboundTypeAsync(string InboundID, string TypeI, string TypeII, string TypeIII, string EditPerson) {
            this.InsertMulInboundTypeAsync(InboundID, TypeI, TypeII, TypeIII, EditPerson, null);
        }
        
        /// <remarks/>
        public void InsertMulInboundTypeAsync(string InboundID, string TypeI, string TypeII, string TypeIII, string EditPerson, object userState) {
            if ((this.InsertMulInboundTypeOperationCompleted == null)) {
                this.InsertMulInboundTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMulInboundTypeOperationCompleted);
            }
            this.InvokeAsync("InsertMulInboundType", new object[] {
                        InboundID,
                        TypeI,
                        TypeII,
                        TypeIII,
                        EditPerson}, this.InsertMulInboundTypeOperationCompleted, userState);
        }
        
        private void OnInsertMulInboundTypeOperationCompleted(object arg) {
            if ((this.InsertMulInboundTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMulInboundTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTimeEffectByTransferCategoryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getTimeEffectByTransferCategoryList(string ID) {
            object[] results = this.Invoke("getTimeEffectByTransferCategoryList", new object[] {
                        ID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getTimeEffectByTransferCategoryListAsync(string ID) {
            this.getTimeEffectByTransferCategoryListAsync(ID, null);
        }
        
        /// <remarks/>
        public void getTimeEffectByTransferCategoryListAsync(string ID, object userState) {
            if ((this.getTimeEffectByTransferCategoryListOperationCompleted == null)) {
                this.getTimeEffectByTransferCategoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimeEffectByTransferCategoryListOperationCompleted);
            }
            this.InvokeAsync("getTimeEffectByTransferCategoryList", new object[] {
                        ID}, this.getTimeEffectByTransferCategoryListOperationCompleted, userState);
        }
        
        private void OngetTimeEffectByTransferCategoryListOperationCompleted(object arg) {
            if ((this.getTimeEffectByTransferCategoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTimeEffectByTransferCategoryListCompleted(this, new getTimeEffectByTransferCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getorderinfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getorderinfo(string po_no) {
            object[] results = this.Invoke("getorderinfo", new object[] {
                        po_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getorderinfoAsync(string po_no) {
            this.getorderinfoAsync(po_no, null);
        }
        
        /// <remarks/>
        public void getorderinfoAsync(string po_no, object userState) {
            if ((this.getorderinfoOperationCompleted == null)) {
                this.getorderinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetorderinfoOperationCompleted);
            }
            this.InvokeAsync("getorderinfo", new object[] {
                        po_no}, this.getorderinfoOperationCompleted, userState);
        }
        
        private void OngetorderinfoOperationCompleted(object arg) {
            if ((this.getorderinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getorderinfoCompleted(this, new getorderinfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateCallLogIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateCallLogIndex(string CID) {
            this.Invoke("updateCallLogIndex", new object[] {
                        CID});
        }
        
        /// <remarks/>
        public void updateCallLogIndexAsync(string CID) {
            this.updateCallLogIndexAsync(CID, null);
        }
        
        /// <remarks/>
        public void updateCallLogIndexAsync(string CID, object userState) {
            if ((this.updateCallLogIndexOperationCompleted == null)) {
                this.updateCallLogIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCallLogIndexOperationCompleted);
            }
            this.InvokeAsync("updateCallLogIndex", new object[] {
                        CID}, this.updateCallLogIndexOperationCompleted, userState);
        }
        
        private void OnupdateCallLogIndexOperationCompleted(object arg) {
            if ((this.updateCallLogIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCallLogIndexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SerchCallLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallLogModel[] SerchCallLog(string searchStr) {
            object[] results = this.Invoke("SerchCallLog", new object[] {
                        searchStr});
            return ((CallLogModel[])(results[0]));
        }
        
        /// <remarks/>
        public void SerchCallLogAsync(string searchStr) {
            this.SerchCallLogAsync(searchStr, null);
        }
        
        /// <remarks/>
        public void SerchCallLogAsync(string searchStr, object userState) {
            if ((this.SerchCallLogOperationCompleted == null)) {
                this.SerchCallLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSerchCallLogOperationCompleted);
            }
            this.InvokeAsync("SerchCallLog", new object[] {
                        searchStr}, this.SerchCallLogOperationCompleted, userState);
        }
        
        private void OnSerchCallLogOperationCompleted(object arg) {
            if ((this.SerchCallLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SerchCallLogCompleted(this, new SerchCallLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getParchaseOrderInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getParchaseOrderInfo(string memberID) {
            object[] results = this.Invoke("getParchaseOrderInfo", new object[] {
                        memberID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getParchaseOrderInfoAsync(string memberID) {
            this.getParchaseOrderInfoAsync(memberID, null);
        }
        
        /// <remarks/>
        public void getParchaseOrderInfoAsync(string memberID, object userState) {
            if ((this.getParchaseOrderInfoOperationCompleted == null)) {
                this.getParchaseOrderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParchaseOrderInfoOperationCompleted);
            }
            this.InvokeAsync("getParchaseOrderInfo", new object[] {
                        memberID}, this.getParchaseOrderInfoOperationCompleted, userState);
        }
        
        private void OngetParchaseOrderInfoOperationCompleted(object arg) {
            if ((this.getParchaseOrderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getParchaseOrderInfoCompleted(this, new getParchaseOrderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaintenanceInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMaintenanceInfo(string inboundid) {
            object[] results = this.Invoke("GetMaintenanceInfo", new object[] {
                        inboundid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintenanceInfoAsync(string inboundid) {
            this.GetMaintenanceInfoAsync(inboundid, null);
        }
        
        /// <remarks/>
        public void GetMaintenanceInfoAsync(string inboundid, object userState) {
            if ((this.GetMaintenanceInfoOperationCompleted == null)) {
                this.GetMaintenanceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintenanceInfoOperationCompleted);
            }
            this.InvokeAsync("GetMaintenanceInfo", new object[] {
                        inboundid}, this.GetMaintenanceInfoOperationCompleted, userState);
        }
        
        private void OnGetMaintenanceInfoOperationCompleted(object arg) {
            if ((this.GetMaintenanceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintenanceInfoCompleted(this, new GetMaintenanceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMaintenanceLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMaintenanceLevel(string level, string inboundid) {
            this.Invoke("UpdateMaintenanceLevel", new object[] {
                        level,
                        inboundid});
        }
        
        /// <remarks/>
        public void UpdateMaintenanceLevelAsync(string level, string inboundid) {
            this.UpdateMaintenanceLevelAsync(level, inboundid, null);
        }
        
        /// <remarks/>
        public void UpdateMaintenanceLevelAsync(string level, string inboundid, object userState) {
            if ((this.UpdateMaintenanceLevelOperationCompleted == null)) {
                this.UpdateMaintenanceLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMaintenanceLevelOperationCompleted);
            }
            this.InvokeAsync("UpdateMaintenanceLevel", new object[] {
                        level,
                        inboundid}, this.UpdateMaintenanceLevelOperationCompleted, userState);
        }
        
        private void OnUpdateMaintenanceLevelOperationCompleted(object arg) {
            if ((this.UpdateMaintenanceLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMaintenanceLevelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMaintenanceInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertMaintenanceInfo(string inboudid, string toFactory, string toCustomer, string lasteditby) {
            this.Invoke("InsertMaintenanceInfo", new object[] {
                        inboudid,
                        toFactory,
                        toCustomer,
                        lasteditby});
        }
        
        /// <remarks/>
        public void InsertMaintenanceInfoAsync(string inboudid, string toFactory, string toCustomer, string lasteditby) {
            this.InsertMaintenanceInfoAsync(inboudid, toFactory, toCustomer, lasteditby, null);
        }
        
        /// <remarks/>
        public void InsertMaintenanceInfoAsync(string inboudid, string toFactory, string toCustomer, string lasteditby, object userState) {
            if ((this.InsertMaintenanceInfoOperationCompleted == null)) {
                this.InsertMaintenanceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMaintenanceInfoOperationCompleted);
            }
            this.InvokeAsync("InsertMaintenanceInfo", new object[] {
                        inboudid,
                        toFactory,
                        toCustomer,
                        lasteditby}, this.InsertMaintenanceInfoOperationCompleted, userState);
        }
        
        private void OnInsertMaintenanceInfoOperationCompleted(object arg) {
            if ((this.InsertMaintenanceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMaintenanceInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCallInMessageForExcel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCallInMessageForExcel(
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency) {
            object[] results = this.Invoke("GetAllCallInMessageForExcel", new object[] {
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate,
                        ProjectType,
                        TVSize,
                        MaintainLevel,
                        Emergency});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCallInMessageForExcelAsync(
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency) {
            this.GetAllCallInMessageForExcelAsync(Order_num, condition1, condition2, condition3, condition4, Time1, Time2, condition5, condition6, condition7, Shenfen, TransferCategoryID, ProcessRate, ProjectType, TVSize, MaintainLevel, Emergency, null);
        }
        
        /// <remarks/>
        public void GetAllCallInMessageForExcelAsync(
                    string Order_num, 
                    string condition1, 
                    string condition2, 
                    string condition3, 
                    string condition4, 
                    System.DateTime Time1, 
                    System.DateTime Time2, 
                    string condition5, 
                    string condition6, 
                    string condition7, 
                    string Shenfen, 
                    string TransferCategoryID, 
                    string ProcessRate, 
                    string ProjectType, 
                    string TVSize, 
                    string MaintainLevel, 
                    string Emergency, 
                    object userState) {
            if ((this.GetAllCallInMessageForExcelOperationCompleted == null)) {
                this.GetAllCallInMessageForExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCallInMessageForExcelOperationCompleted);
            }
            this.InvokeAsync("GetAllCallInMessageForExcel", new object[] {
                        Order_num,
                        condition1,
                        condition2,
                        condition3,
                        condition4,
                        Time1,
                        Time2,
                        condition5,
                        condition6,
                        condition7,
                        Shenfen,
                        TransferCategoryID,
                        ProcessRate,
                        ProjectType,
                        TVSize,
                        MaintainLevel,
                        Emergency}, this.GetAllCallInMessageForExcelOperationCompleted, userState);
        }
        
        private void OnGetAllCallInMessageForExcelOperationCompleted(object arg) {
            if ((this.GetAllCallInMessageForExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCallInMessageForExcelCompleted(this, new GetAllCallInMessageForExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValidCostomerType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetValidCostomerType() {
            object[] results = this.Invoke("GetValidCostomerType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidCostomerTypeAsync() {
            this.GetValidCostomerTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetValidCostomerTypeAsync(object userState) {
            if ((this.GetValidCostomerTypeOperationCompleted == null)) {
                this.GetValidCostomerTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidCostomerTypeOperationCompleted);
            }
            this.InvokeAsync("GetValidCostomerType", new object[0], this.GetValidCostomerTypeOperationCompleted, userState);
        }
        
        private void OnGetValidCostomerTypeOperationCompleted(object arg) {
            if ((this.GetValidCostomerTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidCostomerTypeCompleted(this, new GetValidCostomerTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValidCallCategoryMenuData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetValidCallCategoryMenuData() {
            object[] results = this.Invoke("GetValidCallCategoryMenuData", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidCallCategoryMenuDataAsync() {
            this.GetValidCallCategoryMenuDataAsync(null);
        }
        
        /// <remarks/>
        public void GetValidCallCategoryMenuDataAsync(object userState) {
            if ((this.GetValidCallCategoryMenuDataOperationCompleted == null)) {
                this.GetValidCallCategoryMenuDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidCallCategoryMenuDataOperationCompleted);
            }
            this.InvokeAsync("GetValidCallCategoryMenuData", new object[0], this.GetValidCallCategoryMenuDataOperationCompleted, userState);
        }
        
        private void OnGetValidCallCategoryMenuDataOperationCompleted(object arg) {
            if ((this.GetValidCallCategoryMenuDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidCallCategoryMenuDataCompleted(this, new GetValidCallCategoryMenuDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModel(string pjtid) {
            object[] results = this.Invoke("GetModel", new object[] {
                        pjtid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetModelAsync(string pjtid) {
            this.GetModelAsync(pjtid, null);
        }
        
        /// <remarks/>
        public void GetModelAsync(string pjtid, object userState) {
            if ((this.GetModelOperationCompleted == null)) {
                this.GetModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModelOperationCompleted);
            }
            this.InvokeAsync("GetModel", new object[] {
                        pjtid}, this.GetModelOperationCompleted, userState);
        }
        
        private void OnGetModelOperationCompleted(object arg) {
            if ((this.GetModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModelCompleted(this, new GetModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCostomerTypeByPjt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCostomerTypeByPjt(string pjt) {
            object[] results = this.Invoke("GetCostomerTypeByPjt", new object[] {
                        pjt});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCostomerTypeByPjtAsync(string pjt) {
            this.GetCostomerTypeByPjtAsync(pjt, null);
        }
        
        /// <remarks/>
        public void GetCostomerTypeByPjtAsync(string pjt, object userState) {
            if ((this.GetCostomerTypeByPjtOperationCompleted == null)) {
                this.GetCostomerTypeByPjtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCostomerTypeByPjtOperationCompleted);
            }
            this.InvokeAsync("GetCostomerTypeByPjt", new object[] {
                        pjt}, this.GetCostomerTypeByPjtOperationCompleted, userState);
        }
        
        private void OnGetCostomerTypeByPjtOperationCompleted(object arg) {
            if ((this.GetCostomerTypeByPjtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCostomerTypeByPjtCompleted(this, new GetCostomerTypeByPjtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValidCallCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetValidCallCategory(string pjtid) {
            object[] results = this.Invoke("GetValidCallCategory", new object[] {
                        pjtid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidCallCategoryAsync(string pjtid) {
            this.GetValidCallCategoryAsync(pjtid, null);
        }
        
        /// <remarks/>
        public void GetValidCallCategoryAsync(string pjtid, object userState) {
            if ((this.GetValidCallCategoryOperationCompleted == null)) {
                this.GetValidCallCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidCallCategoryOperationCompleted);
            }
            this.InvokeAsync("GetValidCallCategory", new object[] {
                        pjtid}, this.GetValidCallCategoryOperationCompleted, userState);
        }
        
        private void OnGetValidCallCategoryOperationCompleted(object arg) {
            if ((this.GetValidCallCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidCallCategoryCompleted(this, new GetValidCallCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOriginalID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOriginalID(string OriginalID, string ProcessID) {
            this.Invoke("UpdateOriginalID", new object[] {
                        OriginalID,
                        ProcessID});
        }
        
        /// <remarks/>
        public void UpdateOriginalIDAsync(string OriginalID, string ProcessID) {
            this.UpdateOriginalIDAsync(OriginalID, ProcessID, null);
        }
        
        /// <remarks/>
        public void UpdateOriginalIDAsync(string OriginalID, string ProcessID, object userState) {
            if ((this.UpdateOriginalIDOperationCompleted == null)) {
                this.UpdateOriginalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOriginalIDOperationCompleted);
            }
            this.InvokeAsync("UpdateOriginalID", new object[] {
                        OriginalID,
                        ProcessID}, this.UpdateOriginalIDOperationCompleted, userState);
        }
        
        private void OnUpdateOriginalIDOperationCompleted(object arg) {
            if ((this.UpdateOriginalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOriginalIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CallLogModel {
        
        private string idField;
        
        private System.DateTime requesttimeField;
        
        private string customernameField;
        
        private string typedetailField;
        
        private string createdbyField;
        
        private string disposalstatusField;
        
        private string customernoField;
        
        private string ponumberField;
        
        private string requestdisField;
        
        private string disposalconField;
        
        private string dispositevolveField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime requesttime {
            get {
                return this.requesttimeField;
            }
            set {
                this.requesttimeField = value;
            }
        }
        
        /// <remarks/>
        public string customername {
            get {
                return this.customernameField;
            }
            set {
                this.customernameField = value;
            }
        }
        
        /// <remarks/>
        public string typedetail {
            get {
                return this.typedetailField;
            }
            set {
                this.typedetailField = value;
            }
        }
        
        /// <remarks/>
        public string createdby {
            get {
                return this.createdbyField;
            }
            set {
                this.createdbyField = value;
            }
        }
        
        /// <remarks/>
        public string disposalstatus {
            get {
                return this.disposalstatusField;
            }
            set {
                this.disposalstatusField = value;
            }
        }
        
        /// <remarks/>
        public string customerno {
            get {
                return this.customernoField;
            }
            set {
                this.customernoField = value;
            }
        }
        
        /// <remarks/>
        public string ponumber {
            get {
                return this.ponumberField;
            }
            set {
                this.ponumberField = value;
            }
        }
        
        /// <remarks/>
        public string requestdis {
            get {
                return this.requestdisField;
            }
            set {
                this.requestdisField = value;
            }
        }
        
        /// <remarks/>
        public string disposalcon {
            get {
                return this.disposalconField;
            }
            set {
                this.disposalconField = value;
            }
        }
        
        /// <remarks/>
        public string dispositevolve {
            get {
                return this.dispositevolveField;
            }
            set {
                this.dispositevolveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetTransferLogCompletedEventHandler(object sender, GetTransferLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetFileInfoCompletedEventHandler(object sender, GetFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertFileInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateReferenceIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdatePartInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSubCallCategoryMenuDataCompletedEventHandler(object sender, GetSubCallCategoryMenuDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubCallCategoryMenuDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubCallCategoryMenuDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProjectCompletedEventHandler(object sender, GetProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProjectByProductCompletedEventHandler(object sender, GetProjectByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertInboundTypeForSampoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void saveSampoInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateSampoIDCompletedEventHandler(object sender, UpdateSampoIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSampoIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSampoIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSampoInfoCompletedEventHandler(object sender, GetSampoInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSampoInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSampoInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertInboundTypeForTatungCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void saveTatungInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateTatungIDCompletedEventHandler(object sender, UpdateTatungIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTatungIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTatungIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetTatungInfoCompletedEventHandler(object sender, GetTatungInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTatungInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTatungInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSioInfoCompletedEventHandler(object sender, GetSioInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSioInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSioInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProjectBySourceCompletedEventHandler(object sender, GetProjectBySourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectBySourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectBySourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProjectSourceCompletedEventHandler(object sender, GetProjectSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCallGateCompletedEventHandler(object sender, GetCallGateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallGateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallGateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProductNameCompletedEventHandler(object sender, GetProductNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAllSizeCompletedEventHandler(object sender, GetAllSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetModelByNameCompletedEventHandler(object sender, GetModelByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModelByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModelByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAllCallInMessageNewCompletedEventHandler(object sender, GetAllCallInMessageNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCallInMessageNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCallInMessageNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void saveSynnexReturnInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void saveSynnexInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void saveSynnexInfoNewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void updateSynnexInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getSynnexOneCompletedEventHandler(object sender, getSynnexOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSynnexOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSynnexOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCityListCompletedEventHandler(object sender, GetCityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetDistrictListCompletedEventHandler(object sender, GetDistrictListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistrictListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistrictListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertFileInfoNewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertSynnexProcessCompletedEventHandler(object sender, InsertSynnexProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSynnexProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSynnexProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSynnexByBothCompletedEventHandler(object sender, GetSynnexByBothCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSynnexByBothCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSynnexByBothCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SaveQuestionMessageForTWFLCompletedEventHandler(object sender, SaveQuestionMessageForTWFLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveQuestionMessageForTWFLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveQuestionMessageForTWFLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetPidByCategoryForTWFLCompletedEventHandler(object sender, GetPidByCategoryForTWFLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPidByCategoryForTWFLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPidByCategoryForTWFLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertInboundTypeForTWFLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void insertLogForTWFLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetBulletinListCompletedEventHandler(object sender, GetBulletinListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBulletinListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBulletinListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetBulletinOneCompletedEventHandler(object sender, GetBulletinOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBulletinOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBulletinOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertBulletinReadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertInboundTypeForSynnexCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SynnexUpdateModelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProjectByModelForSynnexCompletedEventHandler(object sender, GetProjectByModelForSynnexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectByModelForSynnexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectByModelForSynnexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCustomerCallInMessageCompletedEventHandler(object sender, GetCustomerCallInMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerCallInMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerCallInMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetHistoryByRef1CompletedEventHandler(object sender, GetHistoryByRef1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryByRef1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryByRef1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getTransferCategoryListCompletedEventHandler(object sender, getTransferCategoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransferCategoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransferCategoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetOtherMessageCompletedEventHandler(object sender, GetOtherMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOtherMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOtherMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCallCenterLeaderMessageCompletedEventHandler(object sender, GetCallCenterLeaderMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallCenterLeaderMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallCenterLeaderMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetEngineerMessageCompletedEventHandler(object sender, GetEngineerMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEngineerMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEngineerMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SelCallInMessageDoingOneCompletedEventHandler(object sender, SelCallInMessageDoingOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelCallInMessageDoingOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelCallInMessageDoingOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SelCallInMessageDoingCompletedEventHandler(object sender, SelCallInMessageDoingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelCallInMessageDoingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelCallInMessageDoingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void AddTheCustomerCallInMessageCompletedEventHandler(object sender, AddTheCustomerCallInMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTheCustomerCallInMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTheCustomerCallInMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateTheCustomerCallInMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetDoManyCallInMessageCompletedEventHandler(object sender, GetDoManyCallInMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoManyCallInMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoManyCallInMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void DelDoManyCallInMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCallCenterLeaderAllMessageCompletedEventHandler(object sender, GetCallCenterLeaderAllMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallCenterLeaderAllMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallCenterLeaderAllMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetEngineerAllMessageCompletedEventHandler(object sender, GetEngineerAllMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEngineerAllMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEngineerAllMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCallCategoryMenuDataCompletedEventHandler(object sender, GetCallCategoryMenuDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallCategoryMenuDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallCategoryMenuDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetTransferDdlMessageCompletedEventHandler(object sender, GetTransferDdlMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferDdlMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferDdlMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCostomerTypeCompletedEventHandler(object sender, GetCostomerTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCostomerTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCostomerTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAllCallInMessageCompletedEventHandler(object sender, GetAllCallInMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCallInMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCallInMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAllCallInMessageOneCompletedEventHandler(object sender, GetAllCallInMessageOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCallInMessageOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCallInMessageOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAllCallInMessageTwoCompletedEventHandler(object sender, GetAllCallInMessageTwoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCallInMessageTwoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCallInMessageTwoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void DelCustomerCallInMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getInboundProgressDetailListCompletedEventHandler(object sender, getInboundProgressDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInboundProgressDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInboundProgressDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAccountCompletedEventHandler(object sender, GetAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertMonitorAgentLogonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertCheckLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAgentCompletedEventHandler(object sender, GetAgentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetRoleCompletedEventHandler(object sender, GetRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateAccountPasswordCompletedEventHandler(object sender, UpdateAccountPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void ReadCallPasswordCompletedEventHandler(object sender, ReadCallPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCallPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCallPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertAgentLogonCompletedEventHandler(object sender, InsertAgentLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAgentLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAgentLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getUserAuthorityCompletedEventHandler(object sender, getUserAuthorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserAuthorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserAuthorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetParentMenuCompletedEventHandler(object sender, GetParentMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSubMenuCompletedEventHandler(object sender, GetSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateLogoutDtCompletedEventHandler(object sender, UpdateLogoutDtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLogoutDtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLogoutDtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void DelMonitorAgentLogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getCallTypeIDCompletedEventHandler(object sender, getCallTypeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCallTypeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCallTypeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetTVModelCompletedEventHandler(object sender, GetTVModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetTypeListCompletedEventHandler(object sender, GetTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void insertLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SetDispositionStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SaveQuestionMessageCompletedEventHandler(object sender, SaveQuestionMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveQuestionMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveQuestionMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SaveQuestionMessageNewCompletedEventHandler(object sender, SaveQuestionMessageNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveQuestionMessageNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveQuestionMessageNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SaveCustomerMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void savetheparsentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetIssueListCompletedEventHandler(object sender, GetIssueListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIssueListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIssueListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSolutionListCompletedEventHandler(object sender, GetSolutionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSolutionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSolutionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void selectdataCompletedEventHandler(object sender, selectdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void DeleteMulInboundTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertMulInboundTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getTimeEffectByTransferCategoryListCompletedEventHandler(object sender, getTimeEffectByTransferCategoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTimeEffectByTransferCategoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTimeEffectByTransferCategoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getorderinfoCompletedEventHandler(object sender, getorderinfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getorderinfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getorderinfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void updateCallLogIndexCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SerchCallLogCompletedEventHandler(object sender, SerchCallLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SerchCallLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SerchCallLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallLogModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallLogModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getParchaseOrderInfoCompletedEventHandler(object sender, getParchaseOrderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getParchaseOrderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getParchaseOrderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetMaintenanceInfoCompletedEventHandler(object sender, GetMaintenanceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintenanceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintenanceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateMaintenanceLevelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertMaintenanceInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAllCallInMessageForExcelCompletedEventHandler(object sender, GetAllCallInMessageForExcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCallInMessageForExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCallInMessageForExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetValidCostomerTypeCompletedEventHandler(object sender, GetValidCostomerTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidCostomerTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidCostomerTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetValidCallCategoryMenuDataCompletedEventHandler(object sender, GetValidCallCategoryMenuDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidCallCategoryMenuDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidCallCategoryMenuDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetModelCompletedEventHandler(object sender, GetModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCostomerTypeByPjtCompletedEventHandler(object sender, GetCostomerTypeByPjtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCostomerTypeByPjtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCostomerTypeByPjtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetValidCallCategoryCompletedEventHandler(object sender, GetValidCallCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidCallCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidCallCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateOriginalIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591